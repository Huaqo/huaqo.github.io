{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Home","text":"<p>Hello there</p>"},{"location":"C%2B%2B/","title":"C++","text":""},{"location":"C%2B%2B/#basics","title":"Basics","text":"<pre><code>#include &lt;iostream&gt;\nusing namespace std;\n\n// Main Function\nint main() {\n    // Variable Declaration\n    int a = 10;       // Integer\n    double b = 20.5;  // Double\n    char c = 'A';     // Character\n    string str = \"Hello World\";  // String\n    bool d = true;    // Boolean\n\n    // Output\n    cout &lt;&lt; \"Hello, World!\" &lt;&lt; endl;\n    return 0;\n}\n</code></pre>"},{"location":"C%2B%2B/#operators","title":"Operators","text":"<pre><code>// Arithmetic\nint sum = 1 + 2;      // Addition\nint diff = 5 - 3;     // Subtraction\nint prod = 2 * 3;     // Multiplication\ndouble quot = 10 / 2; // Division\nint mod = 10 % 3;     // Modulus\n\n// Assignment\nint x = 10;\nx += 5;  // x = x + 5\nx -= 3;  // x = x - 3\nx *= 2;  // x = x * 2\nx /= 2;  // x = x / 2\n\n// Comparison\nbool isEqual = (1 == 1);      // true\nbool isNotEqual = (1 != 2);   // true\nbool isGreater = (5 &gt; 3);     // true\nbool isLesser = (3 &lt; 5);      // true\n</code></pre>"},{"location":"C%2B%2B/#control-structures","title":"Control Structures","text":"<pre><code>// Conditional Statements\nif (a &gt; b) {\n    // code if true\n} else if (a == b) {\n    // code if equal\n} else {\n    // code if false\n}\n\n// Switch Statement\nswitch (a) {\n    case 1:\n        // code for case 1\n        break;\n    case 2:\n        // code for case 2\n        break;\n    default:\n        // default code\n}\n\n// Loops\n// For Loop\nfor (int i = 0; i &lt; 5; i++) {\n    // code\n}\n\n// While Loop\nwhile (a &lt; 10) {\n    // code\n    a++;\n}\n\n// Do-While Loop\ndo {\n    // code\n    a++;\n} while (a &lt; 10);\n</code></pre>"},{"location":"C%2B%2B/#functions","title":"Functions","text":"<pre><code>// Function Definition\nint add(int x, int y) {\n    return x + y;\n}\n\n// Function Call\nint result = add(2, 3);\n</code></pre>"},{"location":"C%2B%2B/#arrays","title":"Arrays","text":"<pre><code>int arr[3] = {1, 2, 3};\n\n// Access Elements\nint firstElement = arr[0];\n\n// Loop through Array\nfor (int i = 0; i &lt; 3; i++) {\n    cout &lt;&lt; arr[i] &lt;&lt; endl;\n}\n</code></pre>"},{"location":"C%2B%2B/#vectors-stl","title":"Vectors (STL)","text":"<pre><code>#include &lt;vector&gt;\n#include &lt;iostream&gt;\nusing namespace std;\n\nvector&lt;int&gt; vec = {1, 2, 3};\n\n// Access Elements\nint firstElement = vec[0];\n\n// Add Elements\nvec.push_back(4);\n\n// Remove Elements\nvec.pop_back();\n\n// Loop through Vector\nfor (int i = 0; i &lt; vec.size(); i++) {\n    cout &lt;&lt; vec[i] &lt;&lt; endl;\n}\n</code></pre>"},{"location":"C%2B%2B/#strings","title":"Strings","text":"<pre><code>#include &lt;string&gt;\n#include &lt;iostream&gt;\nusing namespace std;\n\nstring str = \"Hello, World!\";\n\n// String Methods\nint length = str.length();       // Length\nstring upper = str;              // Uppercase\ntransform(upper.begin(), upper.end(), upper.begin(), ::toupper);\nstring lower = str;              // Lowercase\ntransform(lower.begin(), lower.end(), lower.begin(), ::tolower);\nstring substring = str.substr(0, 5);  // Substring\n\n// String Concatenation\nstring greeting = \"Hello, \" + str + \"!\";\n</code></pre>"},{"location":"C%2B%2B/#file-io","title":"File I/O","text":"<pre><code>#include &lt;fstream&gt;\n#include &lt;iostream&gt;\nusing namespace std;\n\n// Write to File\nofstream outFile(\"file.txt\");\noutFile &lt;&lt; \"Hello, World!\" &lt;&lt; endl;\noutFile.close();\n\n// Read from File\nifstream inFile(\"file.txt\");\nstring content;\ngetline(inFile, content);\ninFile.close();\n</code></pre>"},{"location":"C%2B%2B/#classes","title":"Classes","text":"<pre><code>// Class Definition\nclass Person {\npublic:\n    string name;\n    int age;\n\n    Person(string n, int a) {\n        name = n;\n        age = a;\n    }\n\n    void greet() {\n        cout &lt;&lt; \"Hello, \" &lt;&lt; name &lt;&lt; \"!\" &lt;&lt; endl;\n    }\n};\n\n// Inheritance\nclass Student : public Person {\npublic:\n    string grade;\n\n    Student(string n, int a, string g) : Person(n, a) {\n        grade = g;\n    }\n\n    void study() {\n        cout &lt;&lt; name &lt;&lt; \" is studying.\" &lt;&lt; endl;\n    }\n};\n\n// Create Object\nStudent student(\"John\", 20, \"A\");\nstudent.greet();\nstudent.study();\n</code></pre>"},{"location":"C%2B%2B/#exception-handling","title":"Exception Handling","text":"<pre><code>try {\n    // code that might throw an exception\n    if (b == 0) {\n        throw runtime_error(\"Cannot divide by zero\");\n    }\n    int result = a / b;\n} catch (const runtime_error&amp; e) {\n    // code that runs if exception occurs\n    cout &lt;&lt; \"Error: \" &lt;&lt; e.what() &lt;&lt; endl;\n} catch (...) {\n    // code that runs for any other exception\n    cout &lt;&lt; \"An unknown error occurred.\" &lt;&lt; endl;\n}\n</code></pre>"},{"location":"C%2B%2B/#templates","title":"Templates","text":"<pre><code>// Function Template\ntemplate &lt;typename T&gt;\nT add(T x, T y) {\n    return x + y;\n}\n\nint resultInt = add&lt;int&gt;(2, 3);  // 5\ndouble resultDouble = add&lt;double&gt;(2.5, 3.5);  // 6.0\n\n// Class Template\ntemplate &lt;typename T&gt;\nclass Box {\npublic:\n    T value;\n    Box(T v) : value(v) {}\n    T getValue() {\n        return value;\n    }\n};\n\nBox&lt;int&gt; intBox(123);\nBox&lt;string&gt; strBox(\"Hello\");\n</code></pre>"},{"location":"C%2B%2B/#standard-library-functions","title":"Standard Library Functions","text":"<pre><code>#include &lt;iostream&gt;\n#include &lt;vector&gt;\n#include &lt;algorithm&gt;\nusing namespace std;\n\nvector&lt;int&gt; vec = {1, 2, 3, 4, 5};\n\n// Find Element\nauto it = find(vec.begin(), vec.end(), 3);\n\n// Sort Elements\nsort(vec.begin(), vec.end());\n\n// Lambda Function\nauto add = [](int x, int y) { return x + y; };\nint result = add(2, 3);  // 5\n</code></pre>"},{"location":"C/","title":"C","text":""},{"location":"C/#basics","title":"Basics","text":"<pre><code>#include &lt;stdio.h&gt;\n\n// Main Function\nint main() {\n    // Variable Declaration\n    int a = 10;       // Integer\n    float b = 20.5;   // Float\n    char c = 'A';     // Character\n    char str[] = \"Hello World\";  // String\n    int d = 1;        // Boolean (no native bool type, using int)\n\n    // Output\n    printf(\"Hello, World!\\n\");\n    return 0;\n}\n</code></pre>"},{"location":"C/#operators","title":"Operators","text":"<pre><code>// Arithmetic\nint sum = 1 + 2;      // Addition\nint diff = 5 - 3;     // Subtraction\nint prod = 2 * 3;     // Multiplication\nfloat quot = 10 / 2;  // Division\nint mod = 10 % 3;     // Modulus\n\n// Assignment\nint x = 10;\nx += 5;  // x = x + 5\nx -= 3;  // x = x - 3\nx *= 2;  // x = x * 2\nx /= 2;  // x = x / 2\n\n// Comparison\nint isEqual = (1 == 1);      // true\nint isNotEqual = (1 != 2);   // true\nint isGreater = (5 &gt; 3);     // true\nint isLesser = (3 &lt; 5);      // true\n</code></pre>"},{"location":"C/#control-structures","title":"Control Structures","text":"<pre><code>// Conditional Statements\nif (a &gt; b) {\n    // code if true\n} else if (a == b) {\n    // code if equal\n} else {\n    // code if false\n}\n\n// Switch Statement\nswitch (a) {\n    case 1:\n        // code for case 1\n        break;\n    case 2:\n        // code for case 2\n        break;\n    default:\n        // default code\n}\n\n// Loops\n// For Loop\nfor (int i = 0; i &lt; 5; i++) {\n    // code\n}\n\n// While Loop\nwhile (a &lt; 10) {\n    // code\n    a++;\n}\n\n// Do-While Loop\ndo {\n    // code\n    a++;\n} while (a &lt; 10);\n</code></pre>"},{"location":"C/#functions","title":"Functions","text":"<pre><code>// Function Definition\nint add(int x, int y) {\n    return x + y;\n}\n\n// Function Call\nint result = add(2, 3);\n</code></pre>"},{"location":"C/#arrays","title":"Arrays","text":"<pre><code>int arr[3] = {1, 2, 3};\n\n// Access Elements\nint firstElement = arr[0];\n\n// Loop through Array\nfor (int i = 0; i &lt; 3; i++) {\n    printf(\"%d\\n\", arr[i]);\n}\n</code></pre>"},{"location":"C/#strings","title":"Strings","text":"<pre><code>#include &lt;string.h&gt;\n#include &lt;stdio.h&gt;\n\nchar str[] = \"Hello, World!\";\n\n// String Length\nint length = strlen(str);  // Length\n\n// String Copy\nchar str2[20];\nstrcpy(str2, str);\n\n// String Concatenation\nchar greeting[50] = \"Hello, \";\nstrcat(greeting, \"World!\");\n\n// String Comparison\nint result = strcmp(str, \"Hello, World!\");\n</code></pre>"},{"location":"C/#pointers","title":"Pointers","text":"<pre><code>int a = 10;\nint *p = &amp;a;\n\n// Accessing Value using Pointer\nint value = *p;\n\n// Modifying Value using Pointer\n*p = 20;\n</code></pre>"},{"location":"C/#structures","title":"Structures","text":"<pre><code>#include &lt;stdio.h&gt;\n\n// Structure Definition\nstruct Person {\n    char name[50];\n    int age;\n};\n\n// Structure Variable\nstruct Person person1 = {\"John\", 30};\n\n// Accessing Structure Members\nprintf(\"Name: %s\\n\", person1.name);\nprintf(\"Age: %d\\n\", person1.age);\n</code></pre>"},{"location":"C/#file-io","title":"File I/O","text":"<pre><code>#include &lt;stdio.h&gt;\n\n// Write to File\nFILE *outFile = fopen(\"file.txt\", \"w\");\nif (outFile != NULL) {\n    fprintf(outFile, \"Hello, World!\\n\");\n    fclose(outFile);\n}\n\n// Read from File\nFILE *inFile = fopen(\"file.txt\", \"r\");\nif (inFile != NULL) {\n    char content[100];\n    while (fgets(content, 100, inFile) != NULL) {\n        printf(\"%s\", content);\n    }\n    fclose(inFile);\n}\n</code></pre>"},{"location":"C/#dynamic-memory-allocation","title":"Dynamic Memory Allocation","text":"<pre><code>#include &lt;stdlib.h&gt;\n\n// Allocating Memory\nint *arr = (int *)malloc(5 * sizeof(int));\n\n// Freeing Memory\nfree(arr);\n</code></pre>"},{"location":"C/#preprocessor-directives","title":"Preprocessor Directives","text":"<pre><code>// Macro Definition\n#define PI 3.14159\n\n// Include Header Files\n#include &lt;stdio.h&gt;\n#include &lt;stdlib.h&gt;\n</code></pre>"},{"location":"C/#standard-library-functions","title":"Standard Library Functions","text":"<pre><code>#include &lt;stdio.h&gt;\n#include &lt;stdlib.h&gt;\n\n// String to Integer\nint num = atoi(\"123\");\n\n// Integer to String\nchar str[10];\nsprintf(str, \"%d\", 123);\n</code></pre>"},{"location":"C/#error-handling","title":"Error Handling","text":"<pre><code>#include &lt;stdio.h&gt;\n#include &lt;errno.h&gt;\n#include &lt;string.h&gt;\n\nFILE *file = fopen(\"nonexistent.txt\", \"r\");\nif (file == NULL) {\n    printf(\"Error opening file: %s\\n\", strerror(errno));\n}\n</code></pre>"},{"location":"CSS/","title":"CSS","text":""},{"location":"CSS/#basic-syntax","title":"Basic Syntax","text":"<pre><code>selector {\n    property: value;\n}\n</code></pre>"},{"location":"CSS/#selectors","title":"Selectors","text":""},{"location":"CSS/#type-selector","title":"Type Selector","text":"<pre><code>p {\n    color: blue;\n}\n</code></pre>"},{"location":"CSS/#class-selector","title":"Class Selector","text":"<pre><code>.classname {\n    color: red;\n}\n</code></pre>"},{"location":"CSS/#id-selector","title":"ID Selector","text":"<pre><code>#idname {\n    color: green;\n}\n</code></pre>"},{"location":"CSS/#attribute-selector","title":"Attribute Selector","text":"<pre><code>input[type=\"text\"] {\n    background-color: yellow;\n}\n</code></pre>"},{"location":"CSS/#descendant-selector","title":"Descendant Selector","text":"<pre><code>div p {\n    color: purple;\n}\n</code></pre>"},{"location":"CSS/#child-selector","title":"Child Selector","text":"<pre><code>div &gt; p {\n    color: orange;\n}\n</code></pre>"},{"location":"CSS/#adjacent-sibling-selector","title":"Adjacent Sibling Selector","text":"<pre><code>h1 + p {\n    color: pink;\n}\n</code></pre>"},{"location":"CSS/#general-sibling-selector","title":"General Sibling Selector","text":"<pre><code>h1 ~ p {\n    color: brown;\n}\n</code></pre>"},{"location":"CSS/#pseudo-class-selector","title":"Pseudo-class Selector","text":"<pre><code>a:hover {\n    color: red;\n}\n</code></pre>"},{"location":"CSS/#pseudo-element-selector","title":"Pseudo-element Selector","text":"<pre><code>p::first-line {\n    font-weight: bold;\n}\n</code></pre>"},{"location":"CSS/#colors","title":"Colors","text":""},{"location":"CSS/#named-colors","title":"Named Colors","text":"<pre><code>p {\n    color: red;\n}\n</code></pre>"},{"location":"CSS/#hex-colors","title":"Hex Colors","text":"<pre><code>p {\n    color: #ff0000;\n}\n</code></pre>"},{"location":"CSS/#rgb-colors","title":"RGB Colors","text":"<pre><code>p {\n    color: rgb(255, 0, 0);\n}\n</code></pre>"},{"location":"CSS/#rgba-colors","title":"RGBA Colors","text":"<pre><code>p {\n    color: rgba(255, 0, 0, 0.5);\n}\n</code></pre>"},{"location":"CSS/#hsl-colors","title":"HSL Colors","text":"<pre><code>p {\n    color: hsl(0, 100%, 50%);\n}\n</code></pre>"},{"location":"CSS/#hsla-colors","title":"HSLA Colors","text":"<pre><code>p {\n    color: hsla(0, 100%, 50%, 0.5);\n}\n</code></pre>"},{"location":"CSS/#text","title":"Text","text":""},{"location":"CSS/#text-color","title":"Text Color","text":"<pre><code>p {\n    color: blue;\n}\n</code></pre>"},{"location":"CSS/#text-alignment","title":"Text Alignment","text":"<pre><code>p {\n    text-align: center;\n}\n</code></pre>"},{"location":"CSS/#text-decoration","title":"Text Decoration","text":"<pre><code>p {\n    text-decoration: underline;\n}\n</code></pre>"},{"location":"CSS/#text-transform","title":"Text Transform","text":"<pre><code>p {\n    text-transform: uppercase;\n}\n</code></pre>"},{"location":"CSS/#text-indentation","title":"Text Indentation","text":"<pre><code>p {\n    text-indent: 20px;\n}\n</code></pre>"},{"location":"CSS/#line-height","title":"Line Height","text":"<pre><code>p {\n    line-height: 1.5;\n}\n</code></pre>"},{"location":"CSS/#letter-spacing","title":"Letter Spacing","text":"<pre><code>p {\n    letter-spacing: 2px;\n}\n</code></pre>"},{"location":"CSS/#fonts","title":"Fonts","text":""},{"location":"CSS/#font-family","title":"Font Family","text":"<pre><code>p {\n    font-family: 'Arial', sans-serif;\n}\n</code></pre>"},{"location":"CSS/#font-size","title":"Font Size","text":"<pre><code>p {\n    font-size: 16px;\n}\n</code></pre>"},{"location":"CSS/#font-style","title":"Font Style","text":"<pre><code>p {\n    font-style: italic;\n}\n</code></pre>"},{"location":"CSS/#font-weight","title":"Font Weight","text":"<pre><code>p {\n    font-weight: bold;\n}\n</code></pre>"},{"location":"CSS/#box-model","title":"Box Model","text":""},{"location":"CSS/#width-and-height","title":"Width and Height","text":"<pre><code>div {\n    width: 100px;\n    height: 100px;\n}\n</code></pre>"},{"location":"CSS/#padding","title":"Padding","text":"<pre><code>div {\n    padding: 10px;\n}\n</code></pre>"},{"location":"CSS/#border","title":"Border","text":"<pre><code>div {\n    border: 1px solid black;\n}\n</code></pre>"},{"location":"CSS/#margin","title":"Margin","text":"<pre><code>div {\n    margin: 10px;\n}\n</code></pre>"},{"location":"CSS/#box-sizing","title":"Box Sizing","text":"<pre><code>div {\n    box-sizing: border-box;\n}\n</code></pre>"},{"location":"CSS/#backgrounds","title":"Backgrounds","text":""},{"location":"CSS/#background-color","title":"Background Color","text":"<pre><code>div {\n    background-color: lightblue;\n}\n</code></pre>"},{"location":"CSS/#background-image","title":"Background Image","text":"<pre><code>div {\n    background-image: url('image.jpg');\n}\n</code></pre>"},{"location":"CSS/#background-repeat","title":"Background Repeat","text":"<pre><code>div {\n    background-repeat: no-repeat;\n}\n</code></pre>"},{"location":"CSS/#background-size","title":"Background Size","text":"<pre><code>div {\n    background-size: cover;\n}\n</code></pre>"},{"location":"CSS/#background-position","title":"Background Position","text":"<pre><code>div {\n    background-position: center;\n}\n</code></pre>"},{"location":"CSS/#layout","title":"Layout","text":""},{"location":"CSS/#display","title":"Display","text":"<pre><code>div {\n    display: block;\n}\n\nspan {\n    display: inline;\n}\n</code></pre>"},{"location":"CSS/#position","title":"Position","text":"<pre><code>div {\n    position: relative;\n    top: 10px;\n    left: 10px;\n}\n</code></pre>"},{"location":"CSS/#z-index","title":"Z-index","text":"<pre><code>div {\n    position: absolute;\n    z-index: 10;\n}\n</code></pre>"},{"location":"CSS/#float","title":"Float","text":"<pre><code>div {\n    float: left;\n}\n</code></pre>"},{"location":"CSS/#clear","title":"Clear","text":"<pre><code>div {\n    clear: both;\n}\n</code></pre>"},{"location":"CSS/#flexbox","title":"Flexbox","text":""},{"location":"CSS/#container","title":"Container","text":"<pre><code>.container {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n}\n</code></pre>"},{"location":"CSS/#item","title":"Item","text":"<pre><code>.item {\n    flex: 1;\n}\n</code></pre>"},{"location":"CSS/#grid","title":"Grid","text":""},{"location":"CSS/#container_1","title":"Container","text":"<pre><code>.container {\n    display: grid;\n    grid-template-columns: 1fr 1fr;\n    grid-gap: 10px;\n}\n</code></pre>"},{"location":"CSS/#item_1","title":"Item","text":"<pre><code>.item {\n    grid-column: span 2;\n}\n</code></pre>"},{"location":"CSS/#transitions","title":"Transitions","text":"<pre><code>div {\n    transition: background-color 0.5s ease;\n}\n\ndiv:hover {\n    background-color: lightgreen;\n}\n</code></pre>"},{"location":"CSS/#transforms","title":"Transforms","text":""},{"location":"CSS/#translate","title":"Translate","text":"<pre><code>div {\n    transform: translate(50px, 100px);\n}\n</code></pre>"},{"location":"CSS/#rotate","title":"Rotate","text":"<pre><code>div {\n    transform: rotate(45deg);\n}\n</code></pre>"},{"location":"CSS/#scale","title":"Scale","text":"<pre><code>div {\n    transform: scale(1.5);\n}\n</code></pre>"},{"location":"CSS/#skew","title":"Skew","text":"<pre><code>div {\n    transform: skew(10deg, 20deg);\n}\n</code></pre>"},{"location":"CSS/#animations","title":"Animations","text":""},{"location":"CSS/#keyframes","title":"Keyframes","text":"<pre><code>@keyframes example {\n    from {background-color: red;}\n    to {background-color: yellow;}\n}\n</code></pre>"},{"location":"CSS/#animation","title":"Animation","text":"<pre><code>div {\n    animation-name: example;\n    animation-duration: 4s;\n}\n</code></pre>"},{"location":"Flask/","title":"Flask","text":""},{"location":"Flask/#getting-started","title":"Getting Started","text":""},{"location":"Flask/#installation","title":"Installation","text":"<pre><code># Install Flask using pip\npip install Flask\n</code></pre>"},{"location":"Flask/#basic-application","title":"Basic Application","text":"<pre><code>from flask import Flask\n\napp = Flask(__name__)\n\n@app.route('/')\ndef hello_world():\n    return 'Hello, World!'\n\nif __name__ == '__main__':\n    app.run(debug=True)\n</code></pre>"},{"location":"Flask/#routing","title":"Routing","text":""},{"location":"Flask/#defining-routes","title":"Defining Routes","text":"<pre><code>@app.route('/')\ndef home():\n    return 'Home Page'\n\n@app.route('/about')\ndef about():\n    return 'About Page'\n</code></pre>"},{"location":"Flask/#dynamic-url-parameters","title":"Dynamic URL Parameters","text":"<pre><code>@app.route('/user/&lt;username&gt;')\ndef show_user_profile(username):\n    return f'User {username}'\n\n@app.route('/post/&lt;int:post_id&gt;')\ndef show_post(post_id):\n    return f'Post {post_id}'\n</code></pre>"},{"location":"Flask/#http-methods","title":"HTTP Methods","text":"<pre><code>@app.route('/login', methods=['GET', 'POST'])\ndef login():\n    if request.method == 'POST':\n        return 'Do the login'\n    else:\n        return 'Show the login form'\n</code></pre>"},{"location":"Flask/#templates","title":"Templates","text":""},{"location":"Flask/#rendering-templates","title":"Rendering Templates","text":"<pre><code>from flask import render_template\n\n@app.route('/hello/&lt;name&gt;')\ndef hello(name):\n    return render_template('hello.html', name=name)\n</code></pre>"},{"location":"Flask/#template-file-templateshellohtml","title":"Template File (templates/hello.html)","text":"<pre><code>&lt;!doctype html&gt;\n&lt;title&gt;Hello&lt;/title&gt;\n&lt;h1&gt;Hello, {{ name }}!&lt;/h1&gt;\n</code></pre>"},{"location":"Flask/#forms-and-request-data","title":"Forms and Request Data","text":""},{"location":"Flask/#handling-form-data","title":"Handling Form Data","text":"<pre><code>from flask import request\n\n@app.route('/login', methods=['GET', 'POST'])\ndef login():\n    if request.method == 'POST':\n        username = request.form['username']\n        password = request.form['password']\n        return f'Username: {username}, Password: {password}'\n    return render_template('login.html')\n</code></pre>"},{"location":"Flask/#accessing-url-parameters","title":"Accessing URL Parameters","text":"<pre><code>@app.route('/search')\ndef search():\n    query = request.args.get('query')\n    return f'Search query: {query}'\n</code></pre>"},{"location":"Flask/#redirects-and-errors","title":"Redirects and Errors","text":""},{"location":"Flask/#redirecting","title":"Redirecting","text":"<pre><code>from flask import redirect, url_for\n\n@app.route('/admin')\ndef admin():\n    return redirect(url_for('home'))\n</code></pre>"},{"location":"Flask/#error-handling","title":"Error Handling","text":"<pre><code>@app.errorhandler(404)\ndef page_not_found(error):\n    return render_template('404.html'), 404\n</code></pre>"},{"location":"Flask/#static-files","title":"Static Files","text":""},{"location":"Flask/#serving-static-files","title":"Serving Static Files","text":"<pre><code># Place static files in the \"static\" directory\n# Access them with the /static/&lt;filename&gt; URL\n\n@app.route('/static-example')\ndef static_example():\n    return '&lt;img src=\"/static/example.jpg\" alt=\"Example\"&gt;'\n</code></pre>"},{"location":"Flask/#flask-extensions","title":"Flask Extensions","text":""},{"location":"Flask/#installing-extensions","title":"Installing Extensions","text":"<pre><code># Install Flask-WTF for form handling\npip install Flask-WTF\n</code></pre>"},{"location":"Flask/#using-flask-wtf","title":"Using Flask-WTF","text":"<pre><code>from flask_wtf import FlaskForm\nfrom wtforms import StringField, PasswordField, SubmitField\nfrom wtforms.validators import DataRequired\n\nclass LoginForm(FlaskForm):\n    username = StringField('Username', validators=[DataRequired()])\n    password = PasswordField('Password', validators=[DataRequired()])\n    submit = SubmitField('Log In')\n\n@app.route('/login', methods=['GET', 'POST'])\ndef login():\n    form = LoginForm()\n    if form.validate_on_submit():\n        return f'Username: {form.username.data}, Password: {form.password.data}'\n    return render_template('login.html', form=form)\n</code></pre>"},{"location":"Flask/#example-template-templatesloginhtml","title":"Example Template (templates/login.html)","text":"<pre><code>&lt;!doctype html&gt;\n&lt;title&gt;Login&lt;/title&gt;\n&lt;form method=\"POST\"&gt;\n    {{ form.hidden_tag() }}\n    {{ form.username.label }} {{ form.username(size=20) }}&lt;br&gt;\n    {{ form.password.label }} {{ form.password(size=20) }}&lt;br&gt;\n    {{ form.submit() }}\n&lt;/form&gt;\n</code></pre>"},{"location":"Flask/#running-the-application","title":"Running the Application","text":""},{"location":"Flask/#running-the-development-server","title":"Running the Development Server","text":"<pre><code>export FLASK_APP=app.py\nexport FLASK_ENV=development\nflask run\n</code></pre>"},{"location":"Flask/#using-apprun","title":"Using app.run()","text":"<pre><code>if __name__ == '__main__':\n    app.run(debug=True)\n</code></pre>"},{"location":"Git/","title":"Git","text":""},{"location":"Git/#configuration","title":"Configuration","text":"<pre><code>git config --global user.name \"Your Name\"         # Set the global username for commits\ngit config --global user.email \"you@example.com\"  # Set the global email for commits\ngit config --global core.editor \"vim\"             # Set the default editor for Git\ngit config --global merge.tool \"vimdiff\"          # Set the default merge tool for Git\n</code></pre>"},{"location":"Git/#getting-started","title":"Getting Started","text":"<pre><code>git init                     # Initialize a new Git repository\ngit clone &lt;repo&gt;             # Clone an existing repository\n</code></pre>"},{"location":"Git/#basic-commands","title":"Basic Commands","text":"<pre><code>git status                   # Show the status of the working directory\ngit add &lt;file&gt;               # Add a file to the staging area\ngit add .                    # Add all changes to the staging area\ngit commit -m \"message\"      # Commit changes with a message\ngit commit -am \"message\"     # Add and commit tracked files with a message\ngit diff                     # Show changes between working directory and staging area\ngit diff --staged            # Show changes between staging area and last commit\ngit log                      # Show commit history\ngit log --oneline            # Show commit history in one line per commit\ngit blame &lt;file&gt;             # Show who last modified each line of a file\ngit show &lt;commit&gt;            # Show details of a specific commit\n</code></pre>"},{"location":"Git/#branching-and-merging","title":"Branching and Merging","text":"<pre><code>git branch                   # List branches\ngit branch &lt;branch&gt;          # Create a new branch\ngit checkout &lt;branch&gt;        # Switch to a branch\ngit checkout -b &lt;branch&gt;     # Create and switch to a new branch\ngit merge &lt;branch&gt;           # Merge a branch into the current branch\ngit branch -d &lt;branch&gt;       # Delete a branch\ngit branch -D &lt;branch&gt;       # Force delete a branch\ngit log --graph --oneline --all  # Show branch and merge history\n</code></pre>"},{"location":"Git/#remote-repositories","title":"Remote Repositories","text":"<pre><code>git remote -v                # List remote repositories\ngit remote add &lt;name&gt; &lt;url&gt;  # Add a new remote repository\ngit fetch &lt;remote&gt;           # Fetch changes from a remote repository\ngit pull &lt;remote&gt; &lt;branch&gt;   # Pull changes from a remote branch\ngit push &lt;remote&gt; &lt;branch&gt;   # Push changes to a remote branch\ngit remote rm &lt;name&gt;         # Remove a remote repository\n</code></pre>"},{"location":"Git/#stashing","title":"Stashing","text":"<pre><code>git stash                    # Stash changes in a dirty working directory\ngit stash list               # List stashed changes\ngit stash apply              # Apply the latest stash\ngit stash apply stash@{n}    # Apply a specific stash\ngit stash drop               # Drop the latest stash\ngit stash drop stash@{n}     # Drop a specific stash\ngit stash pop                # Apply and drop the latest stash\ngit stash pop stash@{n}      # Apply and drop a specific stash\n</code></pre>"},{"location":"Git/#undoing-changes","title":"Undoing Changes","text":"<pre><code>git checkout -- &lt;file&gt;       # Discard changes in working directory\ngit reset &lt;file&gt;             # Unstage a file\ngit reset --hard             # Reset the working directory and staging area to the last commit\ngit reset --hard &lt;commit&gt;    # Reset the working directory and staging area to a specific commit\ngit revert &lt;commit&gt;          # Create a new commit that undoes a specific commit\n</code></pre>"},{"location":"Git/#tagging","title":"Tagging","text":"<pre><code>git tag                      # List tags\ngit tag &lt;tag&gt;                # Create a new tag\ngit tag -a &lt;tag&gt; -m \"message\"  # Create an annotated tag\ngit show &lt;tag&gt;               # Show details of a tag\ngit push &lt;remote&gt; &lt;tag&gt;      # Push a tag to a remote repository\ngit push &lt;remote&gt; --tags     # Push all tags to a remote repository\ngit tag -d &lt;tag&gt;             # Delete a tag\ngit push &lt;remote&gt; :refs/tags/&lt;tag&gt;  # Delete a remote tag\n</code></pre>"},{"location":"Git/#aliases","title":"Aliases","text":"<pre><code>git config --global alias.co checkout     # Create an alias for checkout\ngit config --global alias.br branch       # Create an alias for branch\ngit config --global alias.ci commit       # Create an alias for commit\ngit config --global alias.st status       # Create an alias for status\n</code></pre>"},{"location":"HTML/","title":"HTML","text":""},{"location":"HTML/#basic-structure","title":"Basic Structure","text":"<pre><code>&lt;!DOCTYPE html&gt;\n&lt;html lang=\"en\"&gt;\n&lt;head&gt;\n    &lt;meta charset=\"UTF-8\"&gt;\n    &lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"&gt;\n    &lt;title&gt;Document&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>"},{"location":"HTML/#text-formatting","title":"Text Formatting","text":"<pre><code>&lt;h1&gt;Heading 1&lt;/h1&gt;\n&lt;h2&gt;Heading 2&lt;/h2&gt;\n&lt;h3&gt;Heading 3&lt;/h3&gt;\n&lt;h4&gt;Heading 4&lt;/h4&gt;\n&lt;h5&gt;Heading 5&lt;/h5&gt;\n&lt;h6&gt;Heading 6&lt;/h6&gt;\n\n&lt;p&gt;This is a paragraph.&lt;/p&gt;\n&lt;strong&gt;Bold text&lt;/strong&gt;\n&lt;em&gt;Italic text&lt;/em&gt;\n&lt;mark&gt;Highlighted text&lt;/mark&gt;\n&lt;del&gt;Deleted text&lt;/del&gt;\n&lt;ins&gt;Inserted text&lt;/ins&gt;\n&lt;sub&gt;Subscript text&lt;/sub&gt;\n&lt;sup&gt;Superscript text&lt;/sup&gt;\n</code></pre>"},{"location":"HTML/#links","title":"Links","text":"<pre><code>&lt;a href=\"https://www.example.com\"&gt;This is a link&lt;/a&gt;\n&lt;a href=\"https://www.example.com\" target=\"_blank\"&gt;Open link in new tab&lt;/a&gt;\n&lt;a href=\"#section1\"&gt;Jump to section 1&lt;/a&gt;\n</code></pre>"},{"location":"HTML/#images","title":"Images","text":"<pre><code>&lt;img src=\"image.jpg\" alt=\"Description of image\" width=\"500\" height=\"600\"&gt;\n&lt;img src=\"image.jpg\" alt=\"Description of image\" style=\"width:100%;\"&gt;\n</code></pre>"},{"location":"HTML/#lists","title":"Lists","text":""},{"location":"HTML/#unordered-list","title":"Unordered List","text":"<pre><code>&lt;ul&gt;\n    &lt;li&gt;List item 1&lt;/li&gt;\n    &lt;li&gt;List item 2&lt;/li&gt;\n    &lt;li&gt;List item 3&lt;/li&gt;\n&lt;/ul&gt;\n</code></pre>"},{"location":"HTML/#ordered-list","title":"Ordered List","text":"<pre><code>&lt;ol&gt;\n    &lt;li&gt;List item 1&lt;/li&gt;\n    &lt;li&gt;List item 2&lt;/li&gt;\n    &lt;li&gt;List item 3&lt;/li&gt;\n&lt;/ol&gt;\n</code></pre>"},{"location":"HTML/#description-list","title":"Description List","text":"<pre><code>&lt;dl&gt;\n    &lt;dt&gt;Term 1&lt;/dt&gt;\n    &lt;dd&gt;Description 1&lt;/dd&gt;\n    &lt;dt&gt;Term 2&lt;/dt&gt;\n    &lt;dd&gt;Description 2&lt;/dd&gt;\n&lt;/dl&gt;\n</code></pre>"},{"location":"HTML/#tables","title":"Tables","text":"<pre><code>&lt;table&gt;\n    &lt;tr&gt;\n        &lt;th&gt;Header 1&lt;/th&gt;\n        &lt;th&gt;Header 2&lt;/th&gt;\n    &lt;/tr&gt;\n    &lt;tr&gt;\n        &lt;td&gt;Data 1&lt;/td&gt;\n        &lt;td&gt;Data 2&lt;/td&gt;\n    &lt;/tr&gt;\n    &lt;tr&gt;\n        &lt;td&gt;Data 3&lt;/td&gt;\n        &lt;td&gt;Data 4&lt;/td&gt;\n    &lt;/tr&gt;\n&lt;/table&gt;\n</code></pre>"},{"location":"HTML/#forms","title":"Forms","text":"<pre><code>&lt;form action=\"/submit\" method=\"post\"&gt;\n    &lt;label for=\"name\"&gt;Name:&lt;/label&gt;\n    &lt;input type=\"text\" id=\"name\" name=\"name\"&gt;\n\n    &lt;label for=\"email\"&gt;Email:&lt;/label&gt;\n    &lt;input type=\"email\" id=\"email\" name=\"email\"&gt;\n\n    &lt;input type=\"submit\" value=\"Submit\"&gt;\n&lt;/form&gt;\n</code></pre>"},{"location":"HTML/#input-types","title":"Input Types","text":"<pre><code>&lt;input type=\"text\" placeholder=\"Text input\"&gt;\n&lt;input type=\"password\" placeholder=\"Password input\"&gt;\n&lt;input type=\"email\" placeholder=\"Email input\"&gt;\n&lt;input type=\"number\" placeholder=\"Number input\"&gt;\n&lt;input type=\"date\"&gt;\n&lt;input type=\"color\"&gt;\n&lt;input type=\"checkbox\"&gt; Checkbox\n&lt;input type=\"radio\"&gt; Radio\n&lt;input type=\"range\" min=\"0\" max=\"100\"&gt;\n&lt;input type=\"file\"&gt;\n</code></pre>"},{"location":"HTML/#multimedia","title":"Multimedia","text":""},{"location":"HTML/#audio","title":"Audio","text":"<pre><code>&lt;audio controls&gt;\n    &lt;source src=\"audio.mp3\" type=\"audio/mpeg\"&gt;\n    Your browser does not support the audio element.\n&lt;/audio&gt;\n</code></pre>"},{"location":"HTML/#video","title":"Video","text":"<pre><code>&lt;video width=\"320\" height=\"240\" controls&gt;\n    &lt;source src=\"video.mp4\" type=\"video/mp4\"&gt;\n    Your browser does not support the video tag.\n&lt;/video&gt;\n</code></pre>"},{"location":"HTML/#semantic-elements","title":"Semantic Elements","text":"<pre><code>&lt;header&gt;\n    &lt;h1&gt;Page Title&lt;/h1&gt;\n&lt;/header&gt;\n&lt;nav&gt;\n    &lt;ul&gt;\n        &lt;li&gt;&lt;a href=\"#home\"&gt;Home&lt;/a&gt;&lt;/li&gt;\n        &lt;li&gt;&lt;a href=\"#about\"&gt;About&lt;/a&gt;&lt;/li&gt;\n        &lt;li&gt;&lt;a href=\"#contact\"&gt;Contact&lt;/a&gt;&lt;/li&gt;\n    &lt;/ul&gt;\n&lt;/nav&gt;\n&lt;main&gt;\n    &lt;article&gt;\n        &lt;h2&gt;Article Title&lt;/h2&gt;\n        &lt;p&gt;Article content...&lt;/p&gt;\n    &lt;/article&gt;\n&lt;/main&gt;\n&lt;footer&gt;\n    &lt;p&gt;Footer content...&lt;/p&gt;\n&lt;/footer&gt;\n</code></pre>"},{"location":"HTML/#meta-tags","title":"Meta Tags","text":"<pre><code>&lt;meta charset=\"UTF-8\"&gt;\n&lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"&gt;\n&lt;meta name=\"description\" content=\"Description of the webpage\"&gt;\n&lt;meta name=\"keywords\" content=\"HTML, CSS, JavaScript\"&gt;\n&lt;meta name=\"author\" content=\"Author Name\"&gt;\n</code></pre>"},{"location":"HTML/#character-entities","title":"Character Entities","text":"<pre><code>&amp;lt;   &lt;!-- less than --&gt;\n&amp;gt;   &lt;!-- greater than --&gt;\n&amp;amp;  &lt;!-- ampersand --&gt;\n&amp;quot; &lt;!-- double quote --&gt;\n&amp;apos; &lt;!-- single quote --&gt;\n</code></pre>"},{"location":"Homebrew/","title":"Homebrew","text":""},{"location":"Homebrew/#installation","title":"Installation","text":"<pre><code>/bin/bash -c \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)\"\n</code></pre>"},{"location":"Homebrew/#basic-commands","title":"Basic Commands","text":"<pre><code>brew update                      # Update Homebrew and all formulae\nbrew upgrade                     # Upgrade all installed formulae\nbrew cleanup                     # Remove old versions of installed formulae\nbrew doctor                      # Check your system for potential problems\nbrew list                        # List all installed formulae\nbrew info &lt;formula&gt;              # Show information about a formula\nbrew home &lt;formula&gt;              # Open the homepage of a formula\n</code></pre>"},{"location":"Homebrew/#installing-and-uninstalling-formulae","title":"Installing and Uninstalling Formulae","text":"<pre><code>brew install &lt;formula&gt;           # Install a formula\nbrew install &lt;formula&gt;@&lt;version&gt; # Install a specific version of a formula\nbrew uninstall &lt;formula&gt;         # Uninstall a formula\nbrew reinstall &lt;formula&gt;         # Reinstall a formula\n</code></pre>"},{"location":"Homebrew/#searching-for-formulae","title":"Searching for Formulae","text":"<pre><code>brew search &lt;text&gt;               # Search for formulae\nbrew search /&lt;regex&gt;/            # Search for formulae using a regular expression\nbrew search --desc &lt;text&gt;        # Search for formulae by description\n</code></pre>"},{"location":"Homebrew/#using-casks","title":"Using Casks","text":"<pre><code>brew install --cask &lt;cask&gt;       # Install a cask\nbrew uninstall --cask &lt;cask&gt;     # Uninstall a cask\nbrew list --cask                 # List all installed casks\nbrew info --cask &lt;cask&gt;          # Show information about a cask\nbrew home --cask &lt;cask&gt;          # Open the homepage of a cask\n</code></pre>"},{"location":"Homebrew/#services","title":"Services","text":"<pre><code>brew services list               # List all services\nbrew services start &lt;formula&gt;    # Start a service\nbrew services stop &lt;formula&gt;     # Stop a service\nbrew services restart &lt;formula&gt;  # Restart a service\nbrew services run &lt;formula&gt;      # Run a service without starting at login\nbrew services cleanup            # Remove unused service configuration\n</code></pre>"},{"location":"Homebrew/#taps","title":"Taps","text":"<pre><code>brew tap                         # List all tapped repositories\nbrew tap &lt;user/repo&gt;             # Tap a repository\nbrew untap &lt;user/repo&gt;           # Untap a repository\n</code></pre>"},{"location":"Homebrew/#miscellaneous","title":"Miscellaneous","text":"<pre><code>brew config                      # Show Homebrew and system configuration\nbrew doctor                      # Check your system for potential problems\nbrew analytics                   # Show Homebrew analytics status\nbrew analytics off               # Turn off Homebrew analytics\nbrew analytics on                # Turn on Homebrew analytics\n</code></pre>"},{"location":"Http-server/","title":"http-server","text":""},{"location":"Http-server/#installation","title":"Installation","text":"<pre><code># Install http-server globally  brew install http-server\n</code></pre>"},{"location":"Http-server/#basic-usage","title":"Basic Usage","text":"<pre><code># Start a server in the current directory\nhttp-server\n\n# Start a server in a specific directory\nhttp-server /path/to/directory\n\n# Specify the port (default is 8080)\nhttp-server -p 8080\n\n# Specify the host (default is 0.0.0.0)\nhttp-server -a 127.0.0.1\n\n# Specify the default file (default is index.html)\nhttp-server -d false -c-1\n\n# Enable gzip compression\nhttp-server --gzip\n\n# Enable Brotli compression\nhttp-server --brotli\n\n# Specify cache time (in seconds)\nhttp-server -c 3600\n\n# Show help\nhttp-server -h\n</code></pre>"},{"location":"Http-server/#advanced-usage","title":"Advanced Usage","text":"<pre><code># Run server as a background service\nhttp-server &amp;\n\n# Serve over HTTPS\nhttp-server -S -C /path/to/cert.pem -K /path/to/key.pem\n\n# Serve with CORS headers\nhttp-server --cors\n\n# Proxy requests\nhttp-server --proxy http://localhost:8080?\n\n# Disable directory listings\nhttp-server --no-dotfiles\n\n# Disable logging\nhttp-server -s\n</code></pre>"},{"location":"Http-server/#example","title":"Example","text":"<pre><code># Start a server on port 8000 with gzip compression and default index.html\nhttp-server -p 8000 --gzip -c-1\n\n# Start a server in a specific directory on port 3000 with CORS enabled\nhttp-server /path/to/directory -p 3000 --cors\n\n# Start a secure server on port 443\nhttp-server -p 443 -S -C /path/to/cert.pem -K /path/to/key.pem\n</code></pre>"},{"location":"Http-server/#configuration-file","title":"Configuration File","text":"<p>You can create a configuration file named <code>http-server.json</code> to store your settings:</p> <pre><code>{\n  \"port\": 8080,\n  \"host\": \"127.0.0.1\",\n  \"defaultFile\": \"index.html\",\n  \"gzip\": true,\n  \"brotli\": true,\n  \"cache\": 3600,\n  \"showDir\": true,\n  \"autoIndex\": true,\n  \"ext\": \"html\",\n  \"logFn\": function (req, res, error) { console.log(`${req.method} ${req.url}`); },\n  \"proxy\": \"http://localhost:8080?\",\n  \"cors\": true,\n  \"noDotfiles\": false,\n  \"https\": {\n    \"cert\": \"/path/to/cert.pem\",\n    \"key\": \"/path/to/key.pem\"\n  }\n}\n</code></pre> <p>To use the configuration file:</p> <pre><code>http-server -c http-server.json\n</code></pre>"},{"location":"Javascript/","title":"JavaScript","text":""},{"location":"Javascript/#basics","title":"Basics","text":"<pre><code>// Variable Declaration\nlet a = 10;      // Block-scoped\nconst b = 20;    // Block-scoped and constant\nvar c = 30;      // Function-scoped\n\n// Data Types\nlet num = 100;               // Number\nlet str = \"Hello World\";     // String\nlet bool = true;             // Boolean\nlet arr = [1, 2, 3];         // Array\nlet obj = { key: \"value\" };  // Object\nlet func = function() {};    // Function\nlet undef;                   // Undefined\nlet nul = null;              // Null\n</code></pre>"},{"location":"Javascript/#operators","title":"Operators","text":"<pre><code>// Arithmetic\nlet sum = 1 + 2;     // Addition\nlet diff = 5 - 3;    // Subtraction\nlet prod = 2 * 3;    // Multiplication\nlet quot = 10 / 2;   // Division\nlet mod = 10 % 3;    // Modulus\n\n// Assignment\nlet x = 10;\nx += 5;  // x = x + 5\nx -= 3;  // x = x - 3\nx *= 2;  // x = x * 2\nx /= 2;  // x = x / 2\n\n// Comparison\nlet isEqual = (1 == '1');     // true (loose equality)\nlet isStrictEqual = (1 === 1); // true (strict equality)\nlet isNotEqual = (1 != '1');   // false\nlet isGreater = (5 &gt; 3);       // true\nlet isLesser = (3 &lt; 5);        // true\n</code></pre>"},{"location":"Javascript/#control-structures","title":"Control Structures","text":"<pre><code>// Conditional Statements\nif (a &gt; b) {\n  // code if true\n} else if (a === b) {\n  // code if equal\n} else {\n  // code if false\n}\n\n// Switch Statement\nswitch (a) {\n  case 1:\n    // code for case 1\n    break;\n  case 2:\n    // code for case 2\n    break;\n  default:\n    // default code\n}\n\n// Loops\n// For Loop\nfor (let i = 0; i &lt; 5; i++) {\n  // code\n}\n\n// While Loop\nwhile (a &lt; 10) {\n  // code\n  a++;\n}\n\n// Do-While Loop\ndo {\n  // code\n  a++;\n} while (a &lt; 10);\n</code></pre>"},{"location":"Javascript/#functions","title":"Functions","text":"<pre><code>// Function Declaration\nfunction greet(name) {\n  return \"Hello, \" + name;\n}\n\n// Function Expression\nconst greet = function(name) {\n  return \"Hello, \" + name;\n};\n\n// Arrow Function\nconst greet = (name) =&gt; \"Hello, \" + name;\n\n// Immediately Invoked Function Expression (IIFE)\n(function() {\n  // code\n})();\n</code></pre>"},{"location":"Javascript/#arrays","title":"Arrays","text":"<pre><code>let fruits = [\"Apple\", \"Banana\", \"Cherry\"];\n\n// Access Elements\nlet firstFruit = fruits[0];\n\n// Array Methods\nfruits.push(\"Orange\");    // Add to end\nfruits.pop();             // Remove from end\nfruits.shift();           // Remove from start\nfruits.unshift(\"Lemon\");  // Add to start\nlet sliced = fruits.slice(1, 3);  // Slice array\n\n// Loop through Array\nfruits.forEach((fruit) =&gt; console.log(fruit));\n</code></pre>"},{"location":"Javascript/#objects","title":"Objects","text":"<pre><code>let person = {\n  name: \"John\",\n  age: 30,\n  greet: function() {\n    return \"Hello\";\n  }\n};\n\n// Access Properties\nlet name = person.name;  // Dot notation\nlet age = person['age']; // Bracket notation\n\n// Add/Modify Properties\nperson.email = \"john@example.com\";\n\n// Loop through Object\nfor (let key in person) {\n  console.log(key + \": \" + person[key]);\n}\n</code></pre>"},{"location":"Javascript/#dom-manipulation","title":"DOM Manipulation","text":"<pre><code>// Select Elements\nlet element = document.getElementById(\"myId\");\nlet elements = document.getElementsByClassName(\"myClass\");\nlet elements = document.getElementsByTagName(\"div\");\nlet element = document.querySelector(\".myClass\");\nlet elements = document.querySelectorAll(\".myClass\");\n\n// Modify Content\nelement.innerHTML = \"New Content\";\nelement.textContent = \"New Text\";\n\n// Modify Attributes\nelement.setAttribute(\"src\", \"image.jpg\");\nelement.getAttribute(\"src\");\nelement.removeAttribute(\"src\");\n\n// Modify Styles\nelement.style.color = \"red\";\nelement.style.fontSize = \"20px\";\n\n// Event Listeners\nelement.addEventListener(\"click\", function() {\n  alert(\"Clicked!\");\n});\n</code></pre>"},{"location":"Javascript/#promises-and-asyncawait","title":"Promises and Async/Await","text":"<pre><code>// Promises\nlet myPromise = new Promise((resolve, reject) =&gt; {\n  let success = true;\n  if (success) {\n    resolve(\"Promise fulfilled\");\n  } else {\n    reject(\"Promise rejected\");\n  }\n});\n\nmyPromise.then((message) =&gt; {\n  console.log(message);\n}).catch((message) =&gt; {\n  console.log(message);\n});\n\n// Async/Await\nasync function fetchData() {\n  try {\n    let response = await fetch(\"https://api.example.com/data\");\n    let data = await response.json();\n    console.log(data);\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nfetchData();\n</code></pre>"},{"location":"Javascript/#classes","title":"Classes","text":"<pre><code>// Class Declaration\nclass Person {\n  constructor(name, age) {\n    this.name = name;\n    this.age = age;\n  }\n\n  greet() {\n    return \"Hello, \" + this.name;\n  }\n}\n\n// Inheritance\nclass Student extends Person {\n  constructor(name, age, grade) {\n    super(name, age);\n    this.grade = grade;\n  }\n\n  study() {\n    return this.name + \" is studying.\";\n  }\n}\n\nlet student = new Student(\"John\", 20, \"A\");\nconsole.log(student.greet());\nconsole.log(student.study());\n</code></pre>"},{"location":"Javascript/#modules-es6","title":"Modules (ES6)","text":"<pre><code>// Export\nexport const name = \"John\";\nexport function greet() {\n  return \"Hello, \" + name;\n}\n\n// Import\nimport { name, greet } from './module.js';\nconsole.log(greet());\n</code></pre>"},{"location":"Jinja2/","title":"Jinja2","text":""},{"location":"Jinja2/#basic-syntax","title":"Basic Syntax","text":""},{"location":"Jinja2/#variable-interpolation","title":"Variable Interpolation","text":"<pre><code>{{ variable }}\n</code></pre>"},{"location":"Jinja2/#expressions","title":"Expressions","text":"<pre><code>{{ 1 + 2 }}\n{{ \"Hello\" ~ \"World\" }}\n{{ variable | length }}\n</code></pre>"},{"location":"Jinja2/#template-inheritance","title":"Template Inheritance","text":""},{"location":"Jinja2/#base-template","title":"Base Template","text":"<pre><code>&lt;!DOCTYPE html&gt;\n&lt;html lang=\"en\"&gt;\n&lt;head&gt;\n    &lt;meta charset=\"UTF-8\"&gt;\n    &lt;title&gt;{% block title %}My Website{% endblock %}&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    {% block content %}{% endblock %}\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>"},{"location":"Jinja2/#child-template","title":"Child Template","text":"<pre><code>{% extends \"base.html\" %}\n\n{% block title %}Home Page{% endblock %}\n\n{% block content %}\n&lt;h1&gt;Welcome to the Home Page&lt;/h1&gt;\n&lt;p&gt;This is the content of the home page.&lt;/p&gt;\n{% endblock %}\n</code></pre>"},{"location":"Jinja2/#control-structures","title":"Control Structures","text":""},{"location":"Jinja2/#if-statement","title":"If Statement","text":"<pre><code>{% if user %}\n    Hello, {{ user }}!\n{% else %}\n    Hello, Guest!\n{% endif %}\n</code></pre>"},{"location":"Jinja2/#for-loop","title":"For Loop","text":"<pre><code>&lt;ul&gt;\n    {% for item in items %}\n    &lt;li&gt;{{ item }}&lt;/li&gt;\n    {% endfor %}\n&lt;/ul&gt;\n</code></pre>"},{"location":"Jinja2/#macros","title":"Macros","text":"<pre><code>{% macro input(name, value='', type='text') %}\n    &lt;input type=\"{{ type }}\" name=\"{{ name }}\" value=\"{{ value }}\"&gt;\n{% endmacro %}\n\n&lt;p&gt;{{ input('username') }}&lt;/p&gt;\n</code></pre>"},{"location":"Jinja2/#filters","title":"Filters","text":""},{"location":"Jinja2/#applying-filters","title":"Applying Filters","text":"<pre><code>{{ \"hello world\" | capitalize }}\n{{ [1, 2, 3] | sum }}\n</code></pre>"},{"location":"Jinja2/#custom-filters","title":"Custom Filters","text":"<pre><code>def reverse_filter(s):\n    return s[::-1]\n\nenv.filters['reverse'] = reverse_filter\n</code></pre> <pre><code>{{ \"hello\" | reverse }}\n</code></pre>"},{"location":"Jinja2/#include-and-import","title":"Include and Import","text":""},{"location":"Jinja2/#include-template","title":"Include Template","text":"<pre><code>{% include \"header.html\" %}\n&lt;p&gt;Main content goes here...&lt;/p&gt;\n{% include \"footer.html\" %}\n</code></pre>"},{"location":"Jinja2/#import-macros","title":"Import Macros","text":"<pre><code>{% import \"macros.html\" as macros %}\n&lt;p&gt;{{ macros.input('username') }}&lt;/p&gt;\n</code></pre>"},{"location":"Jinja2/#template-comments","title":"Template Comments","text":"<pre><code>{# This is a comment #}\n</code></pre>"},{"location":"Jinja2/#escaping","title":"Escaping","text":""},{"location":"Jinja2/#autoescaping","title":"Autoescaping","text":"<pre><code>{% autoescape true %}\n    {{ user_input }}\n{% endautoescape %}\n</code></pre>"},{"location":"Jinja2/#manual-escaping","title":"Manual Escaping","text":"<pre><code>{{ user_input | escape }}\n</code></pre>"},{"location":"Jinja2/#setting-variables","title":"Setting Variables","text":"<pre><code>{% set username = \"John Doe\" %}\n&lt;p&gt;Hello, {{ username }}!&lt;/p&gt;\n</code></pre>"},{"location":"Jinja2/#loop-controls","title":"Loop Controls","text":""},{"location":"Jinja2/#loop-variables","title":"Loop Variables","text":"<pre><code>{% for item in items %}\n    {{ loop.index }} - {{ item }}\n{% endfor %}\n</code></pre>"},{"location":"Jinja2/#break-and-continue","title":"Break and Continue","text":"<pre><code>{% for item in items %}\n    {% if item == \"skip\" %}\n        {% continue %}\n    {% endif %}\n    {% if item == \"stop\" %}\n        {% break %}\n    {% endif %}\n    {{ item }}\n{% endfor %}\n</code></pre>"},{"location":"Jinja2/#whitespace-control","title":"Whitespace Control","text":"<pre><code>{% raw %}\n{% for item in items %}\n    {{ item }}\n{% endfor %}\n{% endraw %}\n</code></pre> <pre><code>{{- variable -}}\n{%+ tag -%}\n</code></pre>"},{"location":"Jinja2/#extending-jinja2","title":"Extending Jinja2","text":""},{"location":"Jinja2/#custom-functions","title":"Custom Functions","text":"<pre><code>def custom_function():\n    return \"Hello from custom function\"\n\nenv.globals['custom_function'] = custom_function\n</code></pre> <pre><code>&lt;p&gt;{{ custom_function() }}&lt;/p&gt;\n</code></pre>"},{"location":"Jinja2/#custom-tests","title":"Custom Tests","text":"<pre><code>def is_even(n):\n    return n % 2 == 0\n\nenv.tests['even'] = is_even\n</code></pre> <pre><code>{% if variable is even %}\n    &lt;p&gt;{{ variable }} is even&lt;/p&gt;\n{% endif %}\n</code></pre>"},{"location":"Latex/","title":"LaTex","text":""},{"location":"Latex/#document-structure","title":"Document Structure","text":""},{"location":"Latex/#basic-structure","title":"Basic Structure","text":"<pre><code>\\documentclass{article}\n\n\\begin{document}\n\n\\title{Title of the Document}\n\\author{Author Name}\n\\date{\\today}\n\n\\maketitle\n\n\\section{Introduction}\nYour introduction text goes here.\n\n\\end{document}\n</code></pre>"},{"location":"Latex/#preamble","title":"Preamble","text":"<pre><code>\\documentclass{article}\n\n% Packages\n\\usepackage[utf8]{inputenc}\n\\usepackage{amsmath}\n\\usepackage{graphicx}\n\\usepackage{hyperref}\n\n% Custom Commands\n\\newcommand{\\R}{\\mathbb{R}}\n\n\\begin{document}\n...\n\\end{document}\n</code></pre>"},{"location":"Latex/#text-formatting","title":"Text Formatting","text":""},{"location":"Latex/#basic-text","title":"Basic Text","text":"<pre><code>\\textbf{Bold text}\n\n\\textit{Italic text}\n\n\\underline{Underlined text}\n</code></pre>"},{"location":"Latex/#lists","title":"Lists","text":""},{"location":"Latex/#unordered-list","title":"Unordered List","text":"<pre><code>\\begin{itemize}\n    \\item Item 1\n    \\item Item 2\n    \\item Item 3\n\\end{itemize}\n</code></pre>"},{"location":"Latex/#ordered-list","title":"Ordered List","text":"<pre><code>\\begin{enumerate}\n    \\item First item\n    \\item Second item\n    \\item Third item\n\\end{enumerate}\n</code></pre>"},{"location":"Latex/#tables","title":"Tables","text":"<pre><code>\\begin{tabular}{|c|c|c|}\n    \\hline\n    Column 1 &amp; Column 2 &amp; Column 3 \\\\\n    \\hline\n    Data 1 &amp; Data 2 &amp; Data 3 \\\\\n    Data 4 &amp; Data 5 &amp; Data 6 \\\\\n    \\hline\n\\end{tabular}\n</code></pre>"},{"location":"Latex/#mathematics","title":"Mathematics","text":""},{"location":"Latex/#inline-math","title":"Inline Math","text":"<pre><code>This is inline math: $a^2 + b^2 = c^2$.\n</code></pre>"},{"location":"Latex/#display-math","title":"Display Math","text":"<pre><code>\\begin{equation}\n    E = mc^2\n\\end{equation}\n</code></pre>"},{"location":"Latex/#common-symbols","title":"Common Symbols","text":"<pre><code>\\( \\alpha, \\beta, \\gamma, \\pi, \\Sigma, \\sum, \\int, \\infty \\)\n</code></pre>"},{"location":"Latex/#figures","title":"Figures","text":""},{"location":"Latex/#including-graphics","title":"Including Graphics","text":"<pre><code>\\begin{figure}[h]\n    \\centering\n    \\includegraphics[width=0.5\\textwidth]{path/to/image.png}\n    \\caption{Caption for the figure.}\n    \\label{fig:label}\n\\end{figure}\n</code></pre>"},{"location":"Latex/#references","title":"References","text":""},{"location":"Latex/#bibliography","title":"Bibliography","text":"<pre><code>\\begin{thebibliography}{9}\n    \\bibitem{ref1}\n    Author, \\emph{Title}, Journal, Year.\n\\end{thebibliography}\n</code></pre>"},{"location":"Latex/#hyperlinks","title":"Hyperlinks","text":"<pre><code>\\href{https://www.example.com}{Example Link}\n</code></pre>"},{"location":"Latex/#advanced-topics","title":"Advanced Topics","text":""},{"location":"Latex/#custom-commands","title":"Custom Commands","text":"<pre><code>\\newcommand{\\mycommand}[1]{This is my command: #1}\n</code></pre>"},{"location":"Latex/#environments","title":"Environments","text":"<pre><code>\\newenvironment{myenv}[1][default]{%\n  \\begin{center}\n  \\bfseries #1\n}{%\n  \\end{center}\n}\n</code></pre>"},{"location":"Latex/#example-document","title":"Example Document","text":""},{"location":"Latex/#complete-example","title":"Complete Example","text":"<pre><code>\\documentclass{article}\n\\usepackage[utf8]{inputenc}\n\\usepackage{amsmath}\n\\usepackage{graphicx}\n\\usepackage{hyperref}\n\n\\title{Example Document}\n\\author{Author Name}\n\\date{\\today}\n\n\\begin{document}\n\n\\maketitle\n\n\\section{Introduction}\nThis is an example document.\n\n\\section{Mathematics}\nHere is an inline equation: $E = mc^2$.\n\nHere is a displayed equation:\n\\begin{equation}\n    a^2 + b^2 = c^2\n\\end{equation}\n\n\\section{Figures}\n\\begin{figure}[h]\n    \\centering\n    \\includegraphics[width=0.5\\textwidth]{example-image.png}\n    \\caption{Example image}\n    \\label{fig:example}\n\\end{figure}\n\n\\section{Tables}\n\\begin{tabular}{|c|c|c|}\n    \\hline\n    Column 1 &amp; Column 2 &amp; Column 3 \\\\\n    \\hline\n    Data 1 &amp; Data 2 &amp; Data 3 \\\\\n    Data 4 &amp; Data 5 &amp; Data 6 \\\\\n    \\hline\n\\end{tabular}\n\n\\section{Lists}\n\\begin{itemize}\n    \\item Item 1\n    \\item Item 2\n    \\item Item 3\n\\end{itemize}\n\n\\section{Bibliography}\n\\begin{thebibliography}{9}\n    \\bibitem{ref1}\n    Author, \\emph{Title}, Journal, Year.\n\\end{thebibliography}\n\n\\end{document}\n</code></pre>"},{"location":"Markdown/","title":"Markdown","text":""},{"location":"Mermaid/","title":"Mermaid","text":""},{"location":"Mermaid/#getting-started","title":"Getting Started","text":"<p>Mermaid is a JavaScript-based diagramming and charting tool that renders Markdown-inspired text definitions to create and modify diagrams dynamically. </p>"},{"location":"Mermaid/#including-mermaid","title":"Including Mermaid","text":"<p>To use Mermaid in your project, include the following script in your HTML:</p> <pre><code>&lt;script type=\"module\"&gt;\n  import mermaid from 'https://cdn.jsdelivr.net/npm/mermaid@10/dist/mermaid.esm.min.mjs';\n  mermaid.initialize({ startOnLoad: true });\n&lt;/script&gt;\n</code></pre>"},{"location":"Mermaid/#flowchart","title":"Flowchart","text":""},{"location":"Mermaid/#basic-flowchart","title":"Basic Flowchart","text":"<pre><code>graph TD;\n    A--&gt;B;\n    A--&gt;C;\n    B--&gt;D;\n    C--&gt;D;\n</code></pre>"},{"location":"Mermaid/#flowchart-with-text-and-styles","title":"Flowchart with Text and Styles","text":"<pre><code>graph TD;\n    A[Start] --&gt; B{Is it?};\n    B -- Yes --&gt; C[OK];\n    B -- No --&gt; D[Not OK];\n    C --&gt; E[Rethink];\n    D --&gt; E;\n</code></pre>"},{"location":"Mermaid/#sequence-diagram","title":"Sequence Diagram","text":""},{"location":"Mermaid/#basic-sequence-diagram","title":"Basic Sequence Diagram","text":"<pre><code>sequenceDiagram\n    participant Alice\n    participant Bob\n    Alice-&gt;&gt;John: Hello John, how are you?\n    loop Healthcheck\n        John-&gt;&gt;John: Fight against hypochondria\n    end\n    Note right of John: Rational thoughts&lt;br/&gt;prevail...\n    John--&gt;&gt;Alice: Great!\n    John-&gt;&gt;Bob: How about you?\n    Bob--&gt;&gt;John: Jolly good!\n</code></pre>"},{"location":"Mermaid/#sequence-diagram-with-activation","title":"Sequence Diagram with Activation","text":"<pre><code>sequenceDiagram\n    Alice-&gt;&gt;+John: Hello John, how are you?\n    John--&gt;&gt;-Alice: Great!\n</code></pre>"},{"location":"Mermaid/#gantt-chart","title":"Gantt Chart","text":""},{"location":"Mermaid/#basic-gantt-chart","title":"Basic Gantt Chart","text":"<pre><code>gantt\n    dateFormat  YYYY-MM-DD\n    title Adding GANTT diagram functionality to mermaid\n    section A section\n    Completed task            :done,    des1, 2014-01-06,2014-01-08\n    Active task               :active,  des2, 2014-01-09, 3d\n    Future task               :         des3, after des2, 5d\n    Future task2              :         des4, after des3, 5d\n</code></pre>"},{"location":"Mermaid/#class-diagram","title":"Class Diagram","text":""},{"location":"Mermaid/#basic-class-diagram","title":"Basic Class Diagram","text":"<pre><code>classDiagram\n    classA --|&gt; classB : Inheritance\n    classC --* classD : Composition\n    classE --o classF : Aggregation\n    classG &lt;-- classH : Dependency\n    classI -- classJ : Association\n</code></pre>"},{"location":"Mermaid/#detailed-class-diagram","title":"Detailed Class Diagram","text":"<pre><code>classDiagram\n    Animal &lt;|-- Duck\n    Animal &lt;|-- Fish\n    Animal &lt;|-- Zebra\n    Animal : +int age\n    Animal : +String gender\n    Animal: +isMammal()\n    Animal: +mate()\n    class Duck{\n      +String beakColor\n      +swim()\n      +quack()\n    }\n    class Fish{\n      -int sizeInFeet\n      -canEat()\n    }\n    class Zebra{\n      +bool is_wild\n      +run()\n    }\n</code></pre>"},{"location":"Mermaid/#state-diagram","title":"State Diagram","text":""},{"location":"Mermaid/#basic-state-diagram","title":"Basic State Diagram","text":"<pre><code>stateDiagram\n    [*] --&gt; Still\n    Still --&gt; [*]\n\n    Still --&gt; Moving\n    Moving --&gt; Still\n    Moving --&gt; Crash\n    Crash --&gt; [*]\n</code></pre>"},{"location":"Mermaid/#state-diagram-with-transitions","title":"State Diagram with Transitions","text":"<pre><code>stateDiagram\n    [*] --&gt; S1\n    S1 --&gt; S2\n    S2 --&gt; [*]\n\n    state S1 {\n        [*] --&gt; S11\n        S11 --&gt; S12\n        S12 --&gt; [*]\n    }\n</code></pre>"},{"location":"Mermaid/#pie-chart","title":"Pie Chart","text":""},{"location":"Mermaid/#basic-pie-chart","title":"Basic Pie Chart","text":"<pre><code>pie\n    title Key Elements in a Pie Chart\n    \"A\" : 30\n    \"B\" : 40\n    \"C\" : 30\n</code></pre>"},{"location":"Mermaid/#er-diagram","title":"ER Diagram","text":""},{"location":"Mermaid/#basic-er-diagram","title":"Basic ER Diagram","text":"<pre><code>erDiagram\n    CUSTOMER ||--o{ ORDER : places\n    ORDER ||--|{ LINE-ITEM : contains\n    CUSTOMER }|..|{ DELIVERY-ADDRESS : uses\n</code></pre>"},{"location":"Mermaid/#git-graph","title":"Git Graph","text":""},{"location":"Mermaid/#basic-git-graph","title":"Basic Git Graph","text":"<pre><code>gitGraph\n    commit\n    branch develop\n    commit\n    checkout main\n    commit\n    commit\n    checkout develop\n    merge main\n    commit\n</code></pre>"},{"location":"Neovim/","title":"Neovim","text":""},{"location":"Neovim/#basic-commands","title":"Basic Commands","text":"<pre><code>:q      Quit\n:q!     Quit without saving\n:w      Save\n:wq     Save and quit\n:x      Save and quit (same as :wq)\n:w!     Force save\n:wq!    Force save and quit\n:e      Edit a file\n:e!     Edit a file (discard unsaved changes)\n</code></pre>"},{"location":"Neovim/#navigation","title":"Navigation","text":"<pre><code>h       Move left\nj       Move down\nk       Move up\nl       Move right\n\n0       Move to the beginning of the line\n^       Move to the first non-blank character of the line\n$       Move to the end of the line\n\ngg      Go to the first line of the file\nG       Go to the last line of the file\nnG      Go to the nth line of the file\n\nw       Move to the next word\nb       Move to the previous word\ne       Move to the end of the word\n</code></pre>"},{"location":"Neovim/#insertion-modes","title":"Insertion Modes","text":"<pre><code>i       Insert before the cursor\nI       Insert at the beginning of the line\na       Insert after the cursor\nA       Insert at the end of the line\no       Open a new line below the current line\nO       Open a new line above the current line\n</code></pre>"},{"location":"Neovim/#editing","title":"Editing","text":"<pre><code>x       Delete the character under the cursor\nX       Delete the character before the cursor\n\ndw      Delete word\ndd      Delete line\nD       Delete from cursor to the end of the line\n\nu       Undo\nCtrl+r  Redo\n\nyy      Yank (copy) a line\nyw      Yank (copy) a word\np       Paste after the cursor\nP       Paste before the cursor\n\nr       Replace the character under the cursor\nR       Enter replace mode\ncw      Change word\ncc      Change line\nC       Change from cursor to the end of the line\n</code></pre>"},{"location":"Neovim/#visual-mode","title":"Visual Mode","text":"<pre><code>v       Start visual mode (character-wise)\nV       Start visual mode (line-wise)\nCtrl+v  Start visual block mode\n\ny       Yank (copy) selected text\nd       Delete selected text\nc       Change selected text\n&gt;       Indent selected text\n&lt;       Unindent selected text\n</code></pre>"},{"location":"Neovim/#searching","title":"Searching","text":"<pre><code>/pattern        Search for pattern\n?pattern        Search for pattern backwards\nn               Repeat search in the same direction\nN               Repeat search in the opposite direction\n*               Search for the word under the cursor\ng*              Search for the partial word under the cursor\n\n:%s/old/new/g   Replace all occurrences of old with new\n:s/old/new/g    Replace all occurrences of old with new in the current line\n</code></pre>"},{"location":"Neovim/#buffers","title":"Buffers","text":"<pre><code>:ls             List all buffers\n:b &lt;buffer&gt;     Switch to buffer\n:bd             Delete a buffer\n:bn             Go to the next buffer\n:bp             Go to the previous buffer\n</code></pre>"},{"location":"Neovim/#splits","title":"Splits","text":"<pre><code>:sp &lt;file&gt;      Horizontal split\n:vsp &lt;file&gt;     Vertical split\nCtrl+w h        Move to the left split\nCtrl+w j        Move to the split below\nCtrl+w k        Move to the split above\nCtrl+w l        Move to the right split\nCtrl+w q        Quit a split\nCtrl+w o        Close all other splits\n</code></pre>"},{"location":"Neovim/#tabs","title":"Tabs","text":"<pre><code>:tabnew &lt;file&gt;  Open a new tab\n:tabnext        Go to the next tab\n:tabprev        Go to the previous tab\n:tabclose       Close the current tab\n:tabs           List all tabs\n</code></pre>"},{"location":"Neovim/#miscellaneous","title":"Miscellaneous","text":"<pre><code>.               Repeat the last command\n:!command       Execute external command\n:help &lt;command&gt; Get help for command\n:set number     Show line numbers\n:set nonumber   Hide line numbers\n:set relativenumber Show relative line numbers\n:set norelativenumber Hide relative line numbers\n</code></pre>"},{"location":"Neovim/#plugin-management-with-vim-plug","title":"Plugin Management with Vim-Plug","text":"<pre><code>call plug#begin('~/.config/nvim/plugged')\nPlug 'plugin/name'\ncall plug#end()\n\n:PlugInstall    Install plugins\n:PlugUpdate     Update plugins\n:PlugClean      Remove unused plugins\n</code></pre>"},{"location":"Pip/","title":"Pip","text":""},{"location":"Pip/#installing-packages","title":"Installing Packages","text":"<pre><code># Install the latest version of a package\npip install package_name\n\n# Install a specific version of a package\npip install package_name==1.0.0\n\n# Install the latest version of a package within a range\npip install 'package_name&gt;=1.0.0,&lt;2.0.0'\n\n# Install packages from a requirements file\npip install -r requirements.txt\n\n# Install a package from a URL or local path\npip install https://example.com/package.tar.gz\npip install ./package_directory\npip install ./package_name.whl\n\n# Install a package for a specific Python version\npip install --python /path/to/python package_name\n</code></pre>"},{"location":"Pip/#upgrading-packages","title":"Upgrading Packages","text":"<pre><code># Upgrade a package to the latest version\npip install --upgrade package_name\n\n# Upgrade all packages in a requirements file\npip install --upgrade -r requirements.txt\n</code></pre>"},{"location":"Pip/#uninstalling-packages","title":"Uninstalling Packages","text":"<pre><code># Uninstall a package\npip uninstall package_name\n\n# Uninstall multiple packages\npip uninstall package_name1 package_name2\n\n# Uninstall all packages in a requirements file\npip uninstall -r requirements.txt\n</code></pre>"},{"location":"Pip/#listing-packages","title":"Listing Packages","text":"<pre><code># List installed packages\npip list\n\n# List outdated packages\npip list --outdated\n\n# List installed packages in a specific format\npip list --format=columns\npip list --format=freeze\npip list --format=json\n</code></pre>"},{"location":"Pip/#package-information","title":"Package Information","text":"<pre><code># Show information about a package\npip show package_name\n\n# Show the dependencies of a package\npip show --requires package_name\n</code></pre>"},{"location":"Pip/#searching-packages","title":"Searching Packages","text":"<pre><code># Search for packages\npip search keyword\n\n# Search for packages with specific options\npip search --index https://pypi.org/simple keyword\n</code></pre>"},{"location":"Pip/#freezing-and-unfreezing","title":"Freezing and Unfreezing","text":"<pre><code># Freeze installed packages to a requirements file\npip freeze &gt; requirements.txt\n\n# Install packages from a frozen requirements file\npip install -r requirements.txt\n</code></pre>"},{"location":"Pip/#configuring-pip","title":"Configuring pip","text":"<pre><code># Set a default index URL\npip config set global.index-url https://pypi.org/simple\n\n# Set a default trusted host\npip config set global.trusted-host pypi.org\n\n# List all configurations\npip config list\n\n# Remove a configuration\npip config unset global.index-url\n</code></pre>"},{"location":"Postgresql/","title":"PostgreSQL","text":""},{"location":"Postgresql/#getting-started","title":"Getting Started","text":"<pre><code>-- Connect to a database\npsql -h host -U user -d dbname\n\n-- List all databases\n\\l\n\n-- Connect to a database within psql\n\\c dbname\n\n-- List all tables\n\\dt\n\n-- Describe a table\n\\d table_name\n\n-- Exit psql\n\\q\n</code></pre>"},{"location":"Postgresql/#data-types","title":"Data Types","text":"<pre><code>-- PostgreSQL supports the following data types\nINTEGER        -- Integer value\nSERIAL         -- Auto-incrementing integer\nBIGINT         -- Large integer value\nREAL           -- Floating-point number\nDOUBLE PRECISION -- Double-precision floating-point number\nNUMERIC        -- Exact number with selectable precision\nCHAR(n)        -- Fixed-length character string\nVARCHAR(n)     -- Variable-length character string\nTEXT           -- Variable-length character string (no limit)\nDATE           -- Calendar date (year, month, day)\nTIME           -- Time of day (hours, minutes, seconds)\nTIMESTAMP      -- Date and time\nBOOLEAN        -- Logical Boolean (true/false)\nBYTEA          -- Binary data (\"byte array\")\n</code></pre>"},{"location":"Postgresql/#creating-tables","title":"Creating Tables","text":"<pre><code>-- Create a table\nCREATE TABLE table_name (\n    column1 SERIAL PRIMARY KEY,\n    column2 VARCHAR(100) NOT NULL,\n    column3 INTEGER DEFAULT 0\n);\n\n-- Create a table with a foreign key\nCREATE TABLE child_table (\n    id SERIAL PRIMARY KEY,\n    parent_id INTEGER,\n    FOREIGN KEY (parent_id) REFERENCES parent_table(id)\n);\n</code></pre>"},{"location":"Postgresql/#inserting-data","title":"Inserting Data","text":"<pre><code>-- Insert a single row\nINSERT INTO table_name (column2, column3) VALUES ('Hello', 123);\n\n-- Insert multiple rows\nINSERT INTO table_name (column2, column3) VALUES\n('World', 456),\n('PostgreSQL', 789);\n</code></pre>"},{"location":"Postgresql/#querying-data","title":"Querying Data","text":"<pre><code>-- Select all rows\nSELECT * FROM table_name;\n\n-- Select specific columns\nSELECT column1, column2 FROM table_name;\n\n-- Select with a condition\nSELECT * FROM table_name WHERE column1 = 1;\n\n-- Select with sorting\nSELECT * FROM table_name ORDER BY column1 DESC;\n\n-- Select with a limit\nSELECT * FROM table_name LIMIT 10;\n</code></pre>"},{"location":"Postgresql/#updating-data","title":"Updating Data","text":"<pre><code>-- Update specific rows\nUPDATE table_name SET column2 = 'Updated' WHERE column1 = 1;\n\n-- Update all rows\nUPDATE table_name SET column2 = 'Updated';\n</code></pre>"},{"location":"Postgresql/#deleting-data","title":"Deleting Data","text":"<pre><code>-- Delete specific rows\nDELETE FROM table_name WHERE column1 = 1;\n\n-- Delete all rows\nDELETE FROM table_name;\n</code></pre>"},{"location":"Postgresql/#joins","title":"Joins","text":"<pre><code>-- Inner join\nSELECT * FROM table1\nINNER JOIN table2 ON table1.column = table2.column;\n\n-- Left join\nSELECT * FROM table1\nLEFT JOIN table2 ON table1.column = table2.column;\n\n-- Right join\nSELECT * FROM table1\nRIGHT JOIN table2 ON table1.column = table2.column;\n\n-- Full join\nSELECT * FROM table1\nFULL JOIN table2 ON table1.column = table2.column;\n</code></pre>"},{"location":"Postgresql/#aggregate-functions","title":"Aggregate Functions","text":"<pre><code>-- Count rows\nSELECT COUNT(*) FROM table_name;\n\n-- Sum values\nSELECT SUM(column1) FROM table_name;\n\n-- Average values\nSELECT AVG(column1) FROM table_name;\n\n-- Minimum value\nSELECT MIN(column1) FROM table_name;\n\n-- Maximum value\nSELECT MAX(column1) FROM table_name;\n\n-- Group by\nSELECT column2, COUNT(*) FROM table_name GROUP BY column2;\n</code></pre>"},{"location":"Postgresql/#transactions","title":"Transactions","text":"<pre><code>-- Begin a transaction\nBEGIN;\n\n-- Commit a transaction\nCOMMIT;\n\n-- Rollback a transaction\nROLLBACK;\n</code></pre>"},{"location":"Postgresql/#indexes","title":"Indexes","text":"<pre><code>-- Create an index\nCREATE INDEX index_name ON table_name (column1);\n\n-- Create a unique index\nCREATE UNIQUE INDEX unique_index_name ON table_name (column1);\n\n-- Drop an index\nDROP INDEX index_name;\n</code></pre>"},{"location":"Postgresql/#views","title":"Views","text":"<pre><code>-- Create a view\nCREATE VIEW view_name AS\nSELECT column1, column2 FROM table_name WHERE column1 = 1;\n\n-- Select from a view\nSELECT * FROM view_name;\n\n-- Drop a view\nDROP VIEW view_name;\n</code></pre>"},{"location":"Postgresql/#importing-and-exporting-data","title":"Importing and Exporting Data","text":"<pre><code>-- Import data from a CSV file\nCOPY table_name FROM '/path/to/file.csv' DELIMITER ',' CSV HEADER;\n\n-- Export data to a CSV file\nCOPY table_name TO '/path/to/file.csv' DELIMITER ',' CSV HEADER;\n</code></pre>"},{"location":"Postgresql/#user-management","title":"User Management","text":"<pre><code>-- Create a new user\nCREATE USER username WITH PASSWORD 'password';\n\n-- Grant privileges to a user\nGRANT ALL PRIVILEGES ON DATABASE dbname TO username;\n\n-- Revoke privileges from a user\nREVOKE ALL PRIVILEGES ON DATABASE dbname FROM username;\n\n-- Drop a user\nDROP USER username;\n</code></pre>"},{"location":"Postgresql/#backup-and-restore","title":"Backup and Restore","text":"<pre><code>-- Backup a database\npg_dump dbname &gt; backup.sql\n\n-- Restore a database\npsql dbname &lt; backup.sql\n</code></pre>"},{"location":"PyQGIS/","title":"PyQGIS","text":""},{"location":"PyQGIS/#getting-started","title":"Getting Started","text":""},{"location":"PyQGIS/#importing-qgis-modules","title":"Importing QGIS Modules","text":"<pre><code>from qgis.core import *\nfrom qgis.gui import *\nfrom qgis.utils import *\n</code></pre>"},{"location":"PyQGIS/#initializing-qgis-application","title":"Initializing QGIS Application","text":"<pre><code>from qgis.core import QgsApplication\n\nQgsApplication.setPrefixPath(\"/path/to/qgis/installation\", True)\nqgs = QgsApplication([], False)\nqgs.initQgis()\n</code></pre>"},{"location":"PyQGIS/#exiting-qgis-application","title":"Exiting QGIS Application","text":"<pre><code>qgs.exitQgis()\n</code></pre>"},{"location":"PyQGIS/#loading-layers","title":"Loading Layers","text":""},{"location":"PyQGIS/#loading-a-vector-layer","title":"Loading a Vector Layer","text":"<pre><code>vector_layer = QgsVectorLayer(\"/path/to/vector.shp\", \"layer name\", \"ogr\")\nif not vector_layer.isValid():\n    print(\"Layer failed to load!\")\n</code></pre>"},{"location":"PyQGIS/#loading-a-raster-layer","title":"Loading a Raster Layer","text":"<pre><code>raster_layer = QgsRasterLayer(\"/path/to/raster.tif\", \"layer name\")\nif not raster_layer.isValid():\n    print(\"Layer failed to load!\")\n</code></pre>"},{"location":"PyQGIS/#adding-a-layer-to-the-map","title":"Adding a Layer to the Map","text":"<pre><code>QgsProject.instance().addMapLayer(vector_layer)\nQgsProject.instance().addMapLayer(raster_layer)\n</code></pre>"},{"location":"PyQGIS/#layer-operations","title":"Layer Operations","text":""},{"location":"PyQGIS/#accessing-layer-fields","title":"Accessing Layer Fields","text":"<pre><code>fields = vector_layer.fields()\nfor field in fields:\n    print(field.name(), field.typeName())\n</code></pre>"},{"location":"PyQGIS/#iterating-over-features","title":"Iterating Over Features","text":"<pre><code>for feature in vector_layer.getFeatures():\n    print(feature.id(), feature.attributes())\n</code></pre>"},{"location":"PyQGIS/#selecting-features-by-attribute","title":"Selecting Features by Attribute","text":"<pre><code>expression = QgsExpression(\"attribute_name = 'value'\")\nrequest = QgsFeatureRequest(expression)\nfeatures = vector_layer.getFeatures(request)\nfor feature in features:\n    print(feature.id(), feature.attributes())\n</code></pre>"},{"location":"PyQGIS/#geometry-operations","title":"Geometry Operations","text":""},{"location":"PyQGIS/#creating-a-point-geometry","title":"Creating a Point Geometry","text":"<pre><code>from qgis.core import QgsPointXY, QgsGeometry\n\npoint = QgsPointXY(10, 10)\ngeometry = QgsGeometry.fromPointXY(point)\n</code></pre>"},{"location":"PyQGIS/#creating-a-line-geometry","title":"Creating a Line Geometry","text":"<pre><code>line = [QgsPointXY(10, 10), QgsPointXY(20, 20)]\ngeometry = QgsGeometry.fromPolylineXY(line)\n</code></pre>"},{"location":"PyQGIS/#creating-a-polygon-geometry","title":"Creating a Polygon Geometry","text":"<pre><code>polygon = [[QgsPointXY(10, 10), QgsPointXY(20, 20), QgsPointXY(20, 10), QgsPointXY(10, 10)]]\ngeometry = QgsGeometry.fromPolygonXY(polygon)\n</code></pre>"},{"location":"PyQGIS/#spatial-operations","title":"Spatial Operations","text":""},{"location":"PyQGIS/#buffer","title":"Buffer","text":"<pre><code>buffer = geometry.buffer(10, 5)\n</code></pre>"},{"location":"PyQGIS/#intersection","title":"Intersection","text":"<pre><code>intersection = geometry1.intersection(geometry2)\n</code></pre>"},{"location":"PyQGIS/#difference","title":"Difference","text":"<pre><code>difference = geometry1.difference(geometry2)\n</code></pre>"},{"location":"PyQGIS/#crs-coordinate-reference-system","title":"CRS (Coordinate Reference System)","text":""},{"location":"PyQGIS/#setting-a-layer-crs","title":"Setting a Layer CRS","text":"<pre><code>crs = QgsCoordinateReferenceSystem(\"EPSG:4326\")\nvector_layer.setCrs(crs)\n</code></pre>"},{"location":"PyQGIS/#transforming-coordinates","title":"Transforming Coordinates","text":"<pre><code>from qgis.core import QgsCoordinateTransform, QgsProject\n\ntransform = QgsCoordinateTransform(QgsCoordinateReferenceSystem(\"EPSG:4326\"), QgsCoordinateReferenceSystem(\"EPSG:3857\"), QgsProject.instance())\ntransformed_point = transform.transform(QgsPointXY(10, 10))\n</code></pre>"},{"location":"PyQGIS/#map-rendering","title":"Map Rendering","text":""},{"location":"PyQGIS/#creating-a-map-canvas","title":"Creating a Map Canvas","text":"<pre><code>from qgis.gui import QgsMapCanvas\n\ncanvas = QgsMapCanvas()\ncanvas.setCanvasColor(Qt.white)\ncanvas.setExtent(vector_layer.extent())\ncanvas.setLayers([vector_layer])\ncanvas.show()\n</code></pre>"},{"location":"PyQGIS/#saving-map-as-image","title":"Saving Map as Image","text":"<pre><code>from qgis.gui import QgsMapRendererCustomPainterJob\n\nimage = QImage(QSize(800, 600), QImage.Format_ARGB32_Premultiplied)\nimage.fill(Qt.white)\n\npainter = QPainter(image)\nrenderer = QgsMapRendererCustomPainterJob(canvas.mapSettings(), painter)\nrenderer.start()\nrenderer.waitForFinished()\npainter.end()\n\nimage.save(\"/path/to/map.png\", \"png\")\n</code></pre>"},{"location":"PyQGIS/#plugins","title":"Plugins","text":""},{"location":"PyQGIS/#loading-a-plugin","title":"Loading a Plugin","text":"<pre><code>from qgis.utils import loadPlugin, startPlugin\n\nloadPlugin(\"plugin_name\")\nstartPlugin(\"plugin_name\")\n</code></pre>"},{"location":"PyQGIS/#accessing-plugin-methods","title":"Accessing Plugin Methods","text":"<pre><code>plugin_instance = qgis.utils.plugins[\"plugin_name\"]\nplugin_instance.method_name()\n</code></pre>"},{"location":"Python/","title":"Python Syntax","text":""},{"location":"Python/#basics","title":"Basics","text":"<pre><code># Variable Declaration\na = 10  # Integer\nb = 20.5  # Float\nc = \"Hello World\"  # String\nd = True  # Boolean\n\n# Data Types\nnum = 100  # Integer\nstring = \"Hello\"  # String\nboolean = True  # Boolean\nlst = [1, 2, 3]  # List\ntup = (1, 2, 3)  # Tuple\ndct = {\"key\": \"value\"}  # Dictionary\nst = {1, 2, 3}  # Set\nnone = None  # NoneType\n</code></pre>"},{"location":"Python/#operators","title":"Operators","text":"<pre><code># Arithmetic\nsum = 1 + 2  # Addition\ndiff = 5 - 3  # Subtraction\nprod = 2 * 3  # Multiplication\nquot = 10 / 2  # Division\nmod = 10 % 3  # Modulus\n\n# Assignment\nx = 10\nx += 5  # x = x + 5\nx -= 3  # x = x - 3\nx *= 2  # x = x * 2\nx /= 2  # x = x / 2\n\n# Comparison\nis_equal = (1 == 1)  # True\nis_not_equal = (1 != 2)  # True\nis_greater = (5 &gt; 3)  # True\nis_lesser = (3 &lt; 5)  # True\n</code></pre>"},{"location":"Python/#control-structures","title":"Control Structures","text":"<pre><code># Conditional Statements\nif a &gt; b:\n    # code if true\nelif a == b:\n    # code if equal\nelse:\n    # code if false\n\n# Loops\n# For Loop\nfor i in range(5):\n    # code\n\n# While Loop\nwhile a &lt; 10:\n    # code\n    a += 1\n</code></pre>"},{"location":"Python/#functions","title":"Functions","text":"<pre><code># Function Definition\ndef greet(name):\n    return \"Hello, \" + name\n\n# Function Call\ngreet(\"John\")\n</code></pre>"},{"location":"Python/#lists","title":"Lists","text":"<pre><code>fruits = [\"Apple\", \"Banana\", \"Cherry\"]\n\n# Access Elements\nfirst_fruit = fruits[0]\n\n# List Methods\nfruits.append(\"Orange\")  # Add to end\nfruits.pop()  # Remove from end\nfruits.remove(\"Banana\")  # Remove specific element\nsliced = fruits[1:3]  # Slice list\n\n# Loop through List\nfor fruit in fruits:\n    print(fruit)\n</code></pre>"},{"location":"Python/#dictionaries","title":"Dictionaries","text":"<pre><code>person = {\n    \"name\": \"John\",\n    \"age\": 30\n}\n\n# Access Values\nname = person[\"name\"]\n\n# Add/Modify Values\nperson[\"email\"] = \"john@example.com\"\n\n# Loop through Dictionary\nfor key, value in person.items():\n    print(key, value)\n</code></pre>"},{"location":"Python/#strings","title":"Strings","text":"<pre><code>string = \"Hello, World!\"\n\n# String Methods\nlength = len(string)  # Length\nupper = string.upper()  # Uppercase\nlower = string.lower()  # Lowercase\nsplit = string.split(\",\")  # Split\n\n# String Formatting\nname = \"John\"\nformatted = f\"Hello, {name}!\"\n</code></pre>"},{"location":"Python/#file-io","title":"File I/O","text":"<pre><code># Write to File\nwith open(\"file.txt\", \"w\") as file:\n    file.write(\"Hello, World!\")\n\n# Read from File\nwith open(\"file.txt\", \"r\") as file:\n    content = file.read()\n</code></pre>"},{"location":"Python/#classes","title":"Classes","text":"<pre><code># Class Definition\nclass Person:\n    def __init__(self, name, age):\n        self.name = name\n        self.age = age\n\n    def greet(self):\n        return \"Hello, \" + self.name\n\n# Inheritance\nclass Student(Person):\n    def __init__(self, name, age, grade):\n        super().__init__(name, age)\n        self.grade = grade\n\n    def study(self):\n        return self.name + \" is studying.\"\n\n# Create Object\nstudent = Student(\"John\", 20, \"A\")\nprint(student.greet())\nprint(student.study())\n</code></pre>"},{"location":"Python/#modules","title":"Modules","text":"<pre><code># Importing Modules\nimport math\n\n# Using Functions from Modules\nresult = math.sqrt(16)  # 4.0\n\n# Importing Specific Functions\nfrom math import sqrt\nresult = sqrt(16)  # 4.0\n</code></pre>"},{"location":"Python/#exception-handling","title":"Exception Handling","text":"<pre><code>try:\n    # code that might raise an exception\n    result = 10 / 0\nexcept ZeroDivisionError:\n    # code that runs if exception occurs\n    print(\"Cannot divide by zero\")\nfinally:\n    # code that always runs\n    print(\"This is the finally block\")\n</code></pre>"},{"location":"Python/#list-comprehensions","title":"List Comprehensions","text":"<pre><code># Basic List Comprehension\nsquares = [x ** 2 for x in range(10)]\n\n# Conditional List Comprehension\nevens = [x for x in range(10) if x % 2 == 0]\n</code></pre>"},{"location":"Python/#lambda-functions","title":"Lambda Functions","text":"<pre><code># Lambda Function\nadd = lambda x, y: x + y\nresult = add(2, 3)  # 5\n</code></pre>"},{"location":"R/","title":"R","text":""},{"location":"R/#basic-syntax","title":"Basic Syntax","text":""},{"location":"R/#variables","title":"Variables","text":"<pre><code># Assigning a value to a variable\nx &lt;- 10\ny &lt;- \"Hello, World!\"\n\n# Printing a variable\nprint(x)\nprint(y)\n</code></pre>"},{"location":"R/#data-types","title":"Data Types","text":"<pre><code># Numeric\nnum &lt;- 42\n\n# Integer\nint &lt;- as.integer(42)\n\n# Character\nchar &lt;- \"Hello\"\n\n# Logical\nbool &lt;- TRUE\n\n# Vector\nvec &lt;- c(1, 2, 3, 4, 5)\n\n# List\nlst &lt;- list(1, \"a\", TRUE, 1.23)\n\n# Matrix\nmat &lt;- matrix(1:9, nrow=3, ncol=3)\n\n# Data Frame\ndf &lt;- data.frame(\n  ID = c(1, 2, 3),\n  Name = c(\"Alice\", \"Bob\", \"Charlie\"),\n  Age = c(25, 30, 35)\n)\n</code></pre>"},{"location":"R/#operators","title":"Operators","text":"<pre><code># Arithmetic Operators\na &lt;- 10\nb &lt;- 5\nsum &lt;- a + b\ndiff &lt;- a - b\nprod &lt;- a * b\nquot &lt;- a / b\nmod &lt;- a %% b\n\n# Relational Operators\ngt &lt;- a &gt; b\nlt &lt;- a &lt; b\neq &lt;- a == b\n\n# Logical Operators\nand &lt;- TRUE &amp; FALSE\nor &lt;- TRUE | FALSE\nnot &lt;- !TRUE\n</code></pre>"},{"location":"R/#control-structures","title":"Control Structures","text":""},{"location":"R/#conditional-statements","title":"Conditional Statements","text":"<pre><code># If-Else Statement\nif (x &gt; 0) {\n  print(\"Positive\")\n} else if (x &lt; 0) {\n  print(\"Negative\")\n} else {\n  print(\"Zero\")\n}\n</code></pre>"},{"location":"R/#loops","title":"Loops","text":"<pre><code># For Loop\nfor (i in 1:5) {\n  print(i)\n}\n\n# While Loop\ncount &lt;- 1\nwhile (count &lt;= 5) {\n  print(count)\n  count &lt;- count + 1\n}\n\n# Repeat Loop\nrepeat {\n  print(count)\n  count &lt;- count + 1\n  if (count &gt; 5) {\n    break\n  }\n}\n</code></pre>"},{"location":"R/#functions","title":"Functions","text":""},{"location":"R/#defining-and-calling-functions","title":"Defining and Calling Functions","text":"<pre><code># Defining a Function\nmy_function &lt;- function(a, b) {\n  return(a + b)\n}\n\n# Calling a Function\nresult &lt;- my_function(10, 5)\nprint(result)\n</code></pre>"},{"location":"R/#apply-functions","title":"Apply Functions","text":""},{"location":"R/#using-apply-lapply-sapply","title":"Using apply, lapply, sapply","text":"<pre><code># apply\nmat &lt;- matrix(1:9, nrow=3, ncol=3)\napply(mat, 1, sum)  # Sum of each row\n\n# lapply\nlst &lt;- list(a = 1:5, b = 6:10)\nlapply(lst, sum)\n\n# sapply\nsapply(lst, sum)\n</code></pre>"},{"location":"R/#data-manipulation","title":"Data Manipulation","text":""},{"location":"R/#using-dplyr","title":"Using dplyr","text":"<pre><code># Installing and loading dplyr\ninstall.packages(\"dplyr\")\nlibrary(dplyr)\n\n# Data Frame\ndf &lt;- data.frame(\n  ID = c(1, 2, 3),\n  Name = c(\"Alice\", \"Bob\", \"Charlie\"),\n  Age = c(25, 30, 35)\n)\n\n# Selecting Columns\ndf %&gt;% select(Name, Age)\n\n# Filtering Rows\ndf %&gt;% filter(Age &gt; 25)\n\n# Mutating (Adding) Columns\ndf %&gt;% mutate(Age_in_10_Years = Age + 10)\n\n# Summarizing Data\ndf %&gt;% summarise(Mean_Age = mean(Age))\n\n# Grouping Data\ndf %&gt;% group_by(Name) %&gt;% summarise(Mean_Age = mean(Age))\n</code></pre>"},{"location":"R/#plotting","title":"Plotting","text":""},{"location":"R/#using-ggplot2","title":"Using ggplot2","text":"<pre><code># Installing and loading ggplot2\ninstall.packages(\"ggplot2\")\nlibrary(ggplot2)\n\n# Basic Plot\nggplot(data = df, aes(x = Name, y = Age)) +\n  geom_point()\n\n# Line Plot\nggplot(data = df, aes(x = Name, y = Age, group = 1)) +\n  geom_line()\n\n# Bar Plot\nggplot(data = df, aes(x = Name, y = Age)) +\n  geom_bar(stat = \"identity\")\n</code></pre>"},{"location":"R/#reading-and-writing-data","title":"Reading and Writing Data","text":""},{"location":"R/#csv-files","title":"CSV Files","text":"<pre><code># Reading a CSV file\ndf &lt;- read.csv(\"data.csv\")\n\n# Writing to a CSV file\nwrite.csv(df, \"output.csv\", row.names = FALSE)\n</code></pre>"},{"location":"R/#excel-files","title":"Excel Files","text":"<pre><code># Installing and loading readxl\ninstall.packages(\"readxl\")\nlibrary(readxl)\n\n# Reading an Excel file\ndf &lt;- read_excel(\"data.xlsx\")\n\n# Installing and loading writexl\ninstall.packages(\"writexl\")\nlibrary(writexl)\n\n# Writing to an Excel file\nwrite_xlsx(df, \"output.xlsx\")\n</code></pre>"},{"location":"R/#miscellaneous","title":"Miscellaneous","text":""},{"location":"R/#getting-help","title":"Getting Help","text":"<pre><code># Help on a function\nhelp(mean)\n?mean\n\n# Search for a topic\nhelp.search(\"mean\")\n</code></pre>"},{"location":"R/#session-management","title":"Session Management","text":"<pre><code># List objects in the environment\nls()\n\n# Remove an object\nrm(x)\n\n# Clear the workspace\nrm(list = ls())\n</code></pre>"},{"location":"SQLite/","title":"SQLite CLI","text":""},{"location":"SQLite/#getting-started","title":"Getting Started","text":"<pre><code>-- Open a database file\nsqlite3 database.db\n\n-- Open an in-memory database\nsqlite3 :memory:\n</code></pre>"},{"location":"SQLite/#basic-commands","title":"Basic Commands","text":"<pre><code>-- Show all tables\n.tables\n\n-- Show the schema of a table\n.schema table_name\n\n-- Exit SQLite\n.quit\n</code></pre>"},{"location":"SQLite/#data-types","title":"Data Types","text":"<pre><code>-- SQLite supports the following data types\nNULL    -- The value is a NULL value\nINTEGER -- A signed integer\nREAL    -- A floating point value\nTEXT    -- A text string\nBLOB    -- A binary large object\n</code></pre>"},{"location":"SQLite/#creating-tables","title":"Creating Tables","text":"<pre><code>-- Create a table\nCREATE TABLE table_name (\n    column1 INTEGER PRIMARY KEY,\n    column2 TEXT NOT NULL,\n    column3 REAL DEFAULT 0.0\n);\n\n-- Create a table with a foreign key\nCREATE TABLE child_table (\n    id INTEGER PRIMARY KEY,\n    parent_id INTEGER,\n    FOREIGN KEY (parent_id) REFERENCES parent_table(id)\n);\n</code></pre>"},{"location":"SQLite/#inserting-data","title":"Inserting Data","text":"<pre><code>-- Insert a single row\nINSERT INTO table_name (column1, column2) VALUES (1, 'Hello');\n\n-- Insert multiple rows\nINSERT INTO table_name (column1, column2) VALUES\n(2, 'World'),\n(3, 'SQLite');\n</code></pre>"},{"location":"SQLite/#querying-data","title":"Querying Data","text":"<pre><code>-- Select all rows\nSELECT * FROM table_name;\n\n-- Select specific columns\nSELECT column1, column2 FROM table_name;\n\n-- Select with a condition\nSELECT * FROM table_name WHERE column1 = 1;\n\n-- Select with sorting\nSELECT * FROM table_name ORDER BY column1 DESC;\n\n-- Select with a limit\nSELECT * FROM table_name LIMIT 10;\n</code></pre>"},{"location":"SQLite/#updating-data","title":"Updating Data","text":"<pre><code>-- Update specific rows\nUPDATE table_name SET column2 = 'Updated' WHERE column1 = 1;\n\n-- Update all rows\nUPDATE table_name SET column2 = 'Updated';\n</code></pre>"},{"location":"SQLite/#deleting-data","title":"Deleting Data","text":"<pre><code>-- Delete specific rows\nDELETE FROM table_name WHERE column1 = 1;\n\n-- Delete all rows\nDELETE FROM table_name;\n</code></pre>"},{"location":"SQLite/#joins","title":"Joins","text":"<pre><code>-- Inner join\nSELECT * FROM table1\nINNER JOIN table2 ON table1.column = table2.column;\n\n-- Left join\nSELECT * FROM table1\nLEFT JOIN table2 ON table1.column = table2.column;\n\n-- Cross join\nSELECT * FROM table1\nCROSS JOIN table2;\n</code></pre>"},{"location":"SQLite/#aggregate-functions","title":"Aggregate Functions","text":"<pre><code>-- Count rows\nSELECT COUNT(*) FROM table_name;\n\n-- Sum values\nSELECT SUM(column1) FROM table_name;\n\n-- Average values\nSELECT AVG(column1) FROM table_name;\n\n-- Minimum value\nSELECT MIN(column1) FROM table_name;\n\n-- Maximum value\nSELECT MAX(column1) FROM table_name;\n\n-- Group by\nSELECT column2, COUNT(*) FROM table_name GROUP BY column2;\n</code></pre>"},{"location":"SQLite/#transactions","title":"Transactions","text":"<pre><code>-- Begin a transaction\nBEGIN TRANSACTION;\n\n-- Commit a transaction\nCOMMIT;\n\n-- Rollback a transaction\nROLLBACK;\n</code></pre>"},{"location":"SQLite/#indexes","title":"Indexes","text":"<pre><code>-- Create an index\nCREATE INDEX index_name ON table_name (column1);\n\n-- Create a unique index\nCREATE UNIQUE INDEX unique_index_name ON table_name (column1);\n\n-- Drop an index\nDROP INDEX index_name;\n</code></pre>"},{"location":"SQLite/#views","title":"Views","text":"<pre><code>-- Create a view\nCREATE VIEW view_name AS\nSELECT column1, column2 FROM table_name WHERE column1 = 1;\n\n-- Select from a view\nSELECT * FROM view_name;\n\n-- Drop a view\nDROP VIEW view_name;\n</code></pre>"},{"location":"SQLite/#importing-and-exporting-data","title":"Importing and Exporting Data","text":"<pre><code>-- Import data from a CSV file\n.mode csv\n.import file.csv table_name\n\n-- Export data to a CSV file\n.mode csv\n.headers on\n.output file.csv\nSELECT * FROM table_name;\n.output stdout\n</code></pre>"},{"location":"SQLite3/","title":"SQLite3 module in Python","text":""},{"location":"SQLite3/#getting-started","title":"Getting Started","text":""},{"location":"SQLite3/#importing-the-sqlite3-module","title":"Importing the SQLite3 Module","text":"<pre><code>import sqlite3\n</code></pre>"},{"location":"SQLite3/#connecting-to-a-database","title":"Connecting to a Database","text":"<pre><code># Connect to a database (creates the database if it doesn't exist)\nconn = sqlite3.connect('example.db')\n\n# Create a cursor object\ncur = conn.cursor()\n</code></pre>"},{"location":"SQLite3/#closing-the-connection","title":"Closing the Connection","text":"<pre><code># Commit the changes\nconn.commit()\n\n# Close the connection\nconn.close()\n</code></pre>"},{"location":"SQLite3/#creating-tables","title":"Creating Tables","text":""},{"location":"SQLite3/#creating-a-table","title":"Creating a Table","text":"<pre><code>cur.execute('''CREATE TABLE IF NOT EXISTS users (\n                id INTEGER PRIMARY KEY,\n                name TEXT NOT NULL,\n                age INTEGER NOT NULL)''')\nconn.commit()\n</code></pre>"},{"location":"SQLite3/#inserting-data","title":"Inserting Data","text":""},{"location":"SQLite3/#inserting-a-single-row","title":"Inserting a Single Row","text":"<pre><code>cur.execute(\"INSERT INTO users (name, age) VALUES (?, ?)\", ('Alice', 30))\nconn.commit()\n</code></pre>"},{"location":"SQLite3/#inserting-multiple-rows","title":"Inserting Multiple Rows","text":"<pre><code>users = [('Bob', 25), ('Charlie', 35), ('David', 40)]\ncur.executemany(\"INSERT INTO users (name, age) VALUES (?, ?)\", users)\nconn.commit()\n</code></pre>"},{"location":"SQLite3/#querying-data","title":"Querying Data","text":""},{"location":"SQLite3/#selecting-all-rows","title":"Selecting All Rows","text":"<pre><code>cur.execute(\"SELECT * FROM users\")\nrows = cur.fetchall()\nfor row in rows:\n    print(row)\n</code></pre>"},{"location":"SQLite3/#selecting-with-conditions","title":"Selecting with Conditions","text":"<pre><code>cur.execute(\"SELECT * FROM users WHERE age &gt; ?\", (30,))\nrows = cur.fetchall()\nfor row in rows:\n    print(row)\n</code></pre>"},{"location":"SQLite3/#using-named-parameters","title":"Using Named Parameters","text":"<pre><code>cur.execute(\"SELECT * FROM users WHERE name = :name\", {\"name\": \"Alice\"})\nrows = cur.fetchall()\nfor row in rows:\n    print(row)\n</code></pre>"},{"location":"SQLite3/#updating-data","title":"Updating Data","text":""},{"location":"SQLite3/#updating-rows","title":"Updating Rows","text":"<pre><code>cur.execute(\"UPDATE users SET age = ? WHERE name = ?\", (28, 'Alice'))\nconn.commit()\n</code></pre>"},{"location":"SQLite3/#deleting-data","title":"Deleting Data","text":""},{"location":"SQLite3/#deleting-rows","title":"Deleting Rows","text":"<pre><code>cur.execute(\"DELETE FROM users WHERE name = ?\", ('Bob',))\nconn.commit()\n</code></pre>"},{"location":"SQLite3/#using-transactions","title":"Using Transactions","text":""},{"location":"SQLite3/#starting-a-transaction","title":"Starting a Transaction","text":"<pre><code>conn.execute(\"BEGIN TRANSACTION\")\n</code></pre>"},{"location":"SQLite3/#committing-a-transaction","title":"Committing a Transaction","text":"<pre><code>conn.commit()\n</code></pre>"},{"location":"SQLite3/#rolling-back-a-transaction","title":"Rolling Back a Transaction","text":"<pre><code>conn.rollback()\n</code></pre>"},{"location":"SQLite3/#using-context-managers","title":"Using Context Managers","text":""},{"location":"SQLite3/#automatically-committing-transactions","title":"Automatically Committing Transactions","text":"<pre><code>with sqlite3.connect('example.db') as conn:\n    cur = conn.cursor()\n    cur.execute(\"INSERT INTO users (name, age) VALUES (?, ?)\", ('Eve', 22))\n</code></pre>"},{"location":"SQLite3/#advanced-features","title":"Advanced Features","text":""},{"location":"SQLite3/#creating-an-in-memory-database","title":"Creating an In-Memory Database","text":"<pre><code>conn = sqlite3.connect(':memory:')\ncur = conn.cursor()\n</code></pre>"},{"location":"SQLite3/#using-row-factory-for-named-columns","title":"Using Row Factory for Named Columns","text":"<pre><code>conn.row_factory = sqlite3.Row\ncur = conn.cursor()\ncur.execute(\"SELECT * FROM users\")\nrows = cur.fetchall()\nfor row in rows:\n    print(row['name'], row['age'])\n</code></pre>"},{"location":"SQLite3/#executing-script","title":"Executing Script","text":"<pre><code>cur.executescript('''\n    DROP TABLE IF EXISTS users;\n    CREATE TABLE users (\n        id INTEGER PRIMARY KEY,\n        name TEXT NOT NULL,\n        age INTEGER NOT NULL);\n    INSERT INTO users (name, age) VALUES ('Alice', 30);\n    INSERT INTO users (name, age) VALUES ('Bob', 25);\n''')\nconn.commit()\n</code></pre>"},{"location":"SQLite3/#error-handling","title":"Error Handling","text":""},{"location":"SQLite3/#handling-exceptions","title":"Handling Exceptions","text":"<pre><code>try:\n    cur.execute(\"SELECT * FROM non_existing_table\")\nexcept sqlite3.Error as e:\n    print(\"An error occurred:\", e.args[0])\n</code></pre>"},{"location":"Tmux/","title":"Tmux","text":""},{"location":"Tmux/#starting-tmux","title":"Starting Tmux","text":"<pre><code>tmux              Start a new tmux session\ntmux new -s name  Start a new session with a name\ntmux attach       Attach to the last session\ntmux attach -t name  Attach to a session by name\ntmux ls           List all sessions\ntmux kill-session -t name  Kill a session by name\n</code></pre>"},{"location":"Tmux/#session-management","title":"Session Management","text":"<pre><code>Ctrl+b s         List sessions\nCtrl+b $         Rename the current session\nCtrl+b d         Detach from the current session\n</code></pre>"},{"location":"Tmux/#window-management","title":"Window Management","text":"<pre><code>Ctrl+b c         Create a new window\nCtrl+b ,         Rename the current window\nCtrl+b w         List windows\nCtrl+b n         Go to the next window\nCtrl+b p         Go to the previous window\nCtrl+b 0-9       Go to window number 0-9\nCtrl+b &amp;         Kill the current window\n</code></pre>"},{"location":"Tmux/#pane-management","title":"Pane Management","text":"<pre><code>Ctrl+b %         Split the current pane vertically\nCtrl+b \"         Split the current pane horizontally\nCtrl+b x         Kill the current pane\nCtrl+b o         Toggle between panes\nCtrl+b ;         Go to the last active pane\nCtrl+b q         Show pane numbers\nCtrl+b {         Move the current pane left\nCtrl+b }         Move the current pane right\nCtrl+b z         Toggle zoom for the current pane\n</code></pre>"},{"location":"Tmux/#resizing-panes","title":"Resizing Panes","text":"<pre><code>Ctrl+b Ctrl+arrow keys  Resize pane in the direction of the arrow key\n</code></pre>"},{"location":"Tmux/#copy-mode","title":"Copy Mode","text":"<pre><code>Ctrl+b [         Enter copy mode\nSpace            Start selection\nEnter            End selection and copy to buffer\nCtrl+b ]         Paste buffer\n</code></pre>"},{"location":"Tmux/#miscellaneous","title":"Miscellaneous","text":"<pre><code>Ctrl+b ?         List all keybindings\nCtrl+b d         Detach from the current session\nCtrl+b t         Show the time\n</code></pre>"},{"location":"Tmux/#configuring-tmux","title":"Configuring Tmux","text":"<p>Edit the tmux configuration file <code>~/.tmux.conf</code> to customize your tmux experience.</p> <p>Example configuration:</p> <pre><code># Set prefix to Ctrl+a\nunbind C-b\nset -g prefix C-a\nbind C-a send-prefix\n\n# Enable mouse support\nset -g mouse on\n\n# Start windows and panes at 1, not 0\nset -g base-index 1\nsetw -g pane-base-index 1\n\n# Reload configuration\nbind r source-file ~/.tmux.conf \\; display \"Reloaded!\"\n</code></pre>"},{"location":"Tree/","title":"Tree","text":""},{"location":"Tree/#installation","title":"Installation","text":"<pre><code># Install tree on macOS using Homebrew\nbrew install tree\n</code></pre>"},{"location":"Tree/#basic-usage","title":"Basic Usage","text":"<pre><code># Display the tree structure of the current directory\ntree\n\n# Display the tree structure of a specific directory\ntree /path/to/directory\n</code></pre>"},{"location":"Tree/#display-options","title":"Display Options","text":"<pre><code># Display all files and directories, including hidden ones\ntree -a\n\n# Display only directories\ntree -d\n\n# Display the full path prefix for each file\ntree -f\n\n# Follow symbolic links\ntree -l\n</code></pre>"},{"location":"Tree/#sorting-options","title":"Sorting Options","text":"<pre><code># Sort files alphabetically (default)\ntree -v\n\n# Sort files by last modification time\ntree -t\n\n# Sort files by size\ntree -s\n\n# Reverse the order of the sort\ntree -r\n</code></pre>"},{"location":"Tree/#depth-options","title":"Depth Options","text":"<pre><code># Limit the depth of the tree\ntree -L 2\n\n# Print the tree depth of each file and directory\ntree -D\n</code></pre>"},{"location":"Tree/#file-options","title":"File Options","text":"<pre><code># Print the size of each file in bytes\ntree -s\n\n# Print the size of each file in human-readable format\ntree -h\n\n# Print the date of the last modification time for each file\ntree -p\n</code></pre>"},{"location":"Tree/#output-options","title":"Output Options","text":"<pre><code># Print the tree structure without indentation lines\ntree -i\n\n# Print the tree structure with ANSI colorization\ntree -C\n\n# Print the tree structure with file permissions\ntree -p\n\n# Print the tree structure and include the report at the end\ntree -v\n</code></pre>"},{"location":"Tree/#example-commands","title":"Example Commands","text":"<pre><code># Display the tree structure of the current directory, including hidden files, with human-readable sizes\ntree -a -h\n\n# Display only directories, with a depth of 2\ntree -d -L 2\n\n# Display the tree structure of a specific directory, sorted by modification time, with full paths\ntree -t -f /path/to/directory\n\n# Display the tree structure of the current directory, with ANSI colorization, and save to a file\ntree -C &gt; tree_structure.txt\n</code></pre>"},{"location":"Tree/#help","title":"Help","text":"<pre><code># Show help for the tree command\ntree --help\n</code></pre>"},{"location":"gdal/","title":"Geospatial Data Abstraction Library (GDAL)","text":""},{"location":"gdal/#installing-and-loading-the-gdal-package","title":"Installing and Loading the GDAL Package","text":""},{"location":"gdal/#installing-gdal","title":"Installing GDAL","text":"<p>Before using GDAL in R, you need to install the GDAL library on your system. The installation process may vary depending on your operating system.</p>"},{"location":"gdal/#macos","title":"macOS","text":"<p>Install GDAL using Homebrew:</p> <pre><code>brew install gdal\n</code></pre>"},{"location":"gdal/#installing-and-loading-the-rgdal-package-in-r","title":"Installing and Loading the <code>rgdal</code> Package in R","text":"<pre><code># Install the rgdal package\ninstall.packages(\"rgdal\")\n\n# Load the rgdal package\nlibrary(rgdal)\n</code></pre>"},{"location":"gdal/#reading-and-writing-raster-data","title":"Reading and Writing Raster Data","text":""},{"location":"gdal/#reading-raster-data","title":"Reading Raster Data","text":"<pre><code># Read a raster file\nraster &lt;- readGDAL(\"path/to/raster/file.tif\")\nprint(raster)\n</code></pre>"},{"location":"gdal/#writing-raster-data","title":"Writing Raster Data","text":"<pre><code># Write a raster to a file\nwriteGDAL(raster, \"output_raster.tif\")\n</code></pre>"},{"location":"gdal/#reading-and-writing-vector-data","title":"Reading and Writing Vector Data","text":""},{"location":"gdal/#reading-vector-data","title":"Reading Vector Data","text":"<pre><code># Read a shapefile\nvector &lt;- readOGR(dsn = \"path/to/vector/folder\", layer = \"shapefile_name\")\nprint(vector)\n</code></pre>"},{"location":"gdal/#writing-vector-data","title":"Writing Vector Data","text":"<pre><code># Write a shapefile\nwriteOGR(vector, dsn = \"output_folder\", layer = \"output_shapefile\", driver = \"ESRI Shapefile\")\n</code></pre>"},{"location":"gdal/#coordinate-reference-systems-crs","title":"Coordinate Reference Systems (CRS)","text":""},{"location":"gdal/#checking-crs","title":"Checking CRS","text":"<pre><code># Check the CRS of a raster\ncrs(raster)\n\n# Check the CRS of a vector\ncrs(vector)\n</code></pre>"},{"location":"gdal/#setting-crs","title":"Setting CRS","text":"<pre><code># Set the CRS of a raster\ncrs(raster) &lt;- CRS(\"+proj=longlat +datum=WGS84\")\n\n# Set the CRS of a vector\ncrs(vector) &lt;- CRS(\"+proj=longlat +datum=WGS84\")\n</code></pre>"},{"location":"gdal/#reprojecting-data","title":"Reprojecting Data","text":"<pre><code># Reproject a raster\nreprojected_raster &lt;- projectRaster(raster, crs = CRS(\"+proj=utm +zone=33 +datum=WGS84\"))\n\n# Reproject a vector\nreprojected_vector &lt;- spTransform(vector, CRS(\"+proj=utm +zone=33 +datum=WGS84\"))\n</code></pre>"},{"location":"gdal/#raster-calculations","title":"Raster Calculations","text":""},{"location":"gdal/#basic-calculations","title":"Basic Calculations","text":"<pre><code># Arithmetic operations\nr1 &lt;- readGDAL(\"raster1.tif\")\nr2 &lt;- readGDAL(\"raster2.tif\")\n\nr_sum &lt;- r1 + r2\nr_diff &lt;- r1 - r2\nr_prod &lt;- r1 * r2\nr_div &lt;- r1 / r2\n</code></pre>"},{"location":"gdal/#cell-statistics","title":"Cell Statistics","text":"<pre><code># Summary statistics\nmean_value &lt;- cellStats(raster, stat = 'mean')\nmax_value &lt;- cellStats(raster, stat = 'max')\nmin_value &lt;- cellStats(raster, stat = 'min')\n\n# Cell-based statistics\ncell_mean &lt;- calc(raster, fun = mean)\ncell_sum &lt;- calc(raster, fun = sum)\n</code></pre>"},{"location":"gdal/#zonal-statistics","title":"Zonal Statistics","text":"<pre><code># Zonal statistics\nzones &lt;- readGDAL(\"zones.tif\")\nzonal_mean &lt;- zonal(raster, zones, fun = \"mean\")\n</code></pre>"},{"location":"gdal/#spatial-operations","title":"Spatial Operations","text":""},{"location":"gdal/#resampling-rasters","title":"Resampling Rasters","text":"<pre><code># Resample a raster\nresampled_raster &lt;- resample(raster, raster, method = \"bilinear\")\n</code></pre>"},{"location":"gdal/#aggregating-rasters","title":"Aggregating Rasters","text":"<pre><code># Aggregate a raster\naggregated_raster &lt;- aggregate(raster, fact = 2, fun = mean)\n</code></pre>"},{"location":"gdal/#masking-rasters","title":"Masking Rasters","text":"<pre><code># Mask a raster with another raster or vector\nmasked_raster &lt;- mask(raster, mask_layer)\n</code></pre>"},{"location":"gdal/#cropping-rasters","title":"Cropping Rasters","text":"<pre><code># Crop a raster\ncropped_raster &lt;- crop(raster, extent(0, 5, 0, 5))\n</code></pre>"},{"location":"gdal/#visualization","title":"Visualization","text":""},{"location":"gdal/#plotting-rasters","title":"Plotting Rasters","text":"<pre><code># Plot a raster\nplot(raster)\n</code></pre>"},{"location":"gdal/#plotting-vectors","title":"Plotting Vectors","text":"<pre><code># Plot a vector\nplot(vector)\n</code></pre>"},{"location":"gdal/#overlaying-rasters-and-vectors","title":"Overlaying Rasters and Vectors","text":"<pre><code># Overlay a vector on a raster plot\nplot(raster)\nplot(vector, add = TRUE)\n</code></pre>"},{"location":"json/","title":"Json Module","text":""},{"location":"json/#importing-the-json-module","title":"Importing the JSON Module","text":"<pre><code>import json\n</code></pre>"},{"location":"json/#reading-json-data","title":"Reading JSON Data","text":""},{"location":"json/#reading-json-from-a-string","title":"Reading JSON from a String","text":"<pre><code>json_string = '{\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}'\ndata = json.loads(json_string)\nprint(data)\n</code></pre>"},{"location":"json/#reading-json-from-a-file","title":"Reading JSON from a File","text":"<pre><code>with open('data.json', 'r') as file:\n    data = json.load(file)\nprint(data)\n</code></pre>"},{"location":"json/#writing-json-data","title":"Writing JSON Data","text":""},{"location":"json/#writing-json-to-a-string","title":"Writing JSON to a String","text":"<pre><code>data = {\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}\njson_string = json.dumps(data)\nprint(json_string)\n</code></pre>"},{"location":"json/#writing-json-to-a-file","title":"Writing JSON to a File","text":"<pre><code>data = {\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}\nwith open('data.json', 'w') as file:\n    json.dump(data, file)\n</code></pre>"},{"location":"json/#formatting-json","title":"Formatting JSON","text":""},{"location":"json/#pretty-print-json","title":"Pretty Print JSON","text":"<pre><code>data = {\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}\njson_string = json.dumps(data, indent=4)\nprint(json_string)\n</code></pre>"},{"location":"json/#custom-separators","title":"Custom Separators","text":"<pre><code>data = {\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}\njson_string = json.dumps(data, separators=(',', ': '))\nprint(json_string)\n</code></pre>"},{"location":"json/#working-with-json-objects","title":"Working with JSON Objects","text":""},{"location":"json/#accessing-json-data","title":"Accessing JSON Data","text":"<pre><code>data = {\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}\nprint(data['name'])\nprint(data.get('age'))\n</code></pre>"},{"location":"json/#modifying-json-data","title":"Modifying JSON Data","text":"<pre><code>data = {\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}\ndata['age'] = 31\ndata['city'] = 'San Francisco'\nprint(data)\n</code></pre>"},{"location":"json/#deleting-json-data","title":"Deleting JSON Data","text":"<pre><code>data = {\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}\ndel data['age']\nprint(data)\n</code></pre>"},{"location":"json/#handling-json-errors","title":"Handling JSON Errors","text":""},{"location":"json/#handling-json-decode-error","title":"Handling JSON Decode Error","text":"<pre><code>json_string = '{\"name\": \"John\", \"age\": 30, \"city\": \"New York\"'\ntry:\n    data = json.loads(json_string)\nexcept json.JSONDecodeError as e:\n    print(f'Error decoding JSON: {e}')\n</code></pre>"},{"location":"json/#handling-json-encode-error","title":"Handling JSON Encode Error","text":"<pre><code>data = {\"name\": \"John\", \"age\": 30, \"city\": set([1, 2, 3])}\ntry:\n    json_string = json.dumps(data)\nexcept TypeError as e:\n    print(f'Error encoding JSON: {e}')\n</code></pre>"},{"location":"json/#custom-json-encoding-and-decoding","title":"Custom JSON Encoding and Decoding","text":""},{"location":"json/#custom-json-encoder","title":"Custom JSON Encoder","text":"<pre><code>class CustomEncoder(json.JSONEncoder):\n    def default(self, obj):\n        if isinstance(obj, set):\n            return list(obj)\n        return json.JSONEncoder.default(self, obj)\n\ndata = {\"name\": \"John\", \"age\": 30, \"city\": set([1, 2, 3])}\njson_string = json.dumps(data, cls=CustomEncoder)\nprint(json_string)\n</code></pre>"},{"location":"json/#custom-json-decoder","title":"Custom JSON Decoder","text":"<pre><code>def decode_set(dct):\n    for key, value in dct.items():\n        if isinstance(value, list):\n            dct[key] = set(value)\n    return dct\n\njson_string = '{\"name\": \"John\", \"age\": 30, \"city\": [1, 2, 3]}'\ndata = json.loads(json_string, object_hook=decode_set)\nprint(data)\n</code></pre>"},{"location":"json/#json-with-complex-objects","title":"JSON with Complex Objects","text":""},{"location":"json/#encoding-and-decoding-complex-objects","title":"Encoding and Decoding Complex Objects","text":"<pre><code>from datetime import datetime\n\nclass ComplexEncoder(json.JSONEncoder):\n    def default(self, obj):\n        if isinstance(obj, datetime):\n            return obj.isoformat()\n        return json.JSONEncoder.default(self, obj)\n\ndata = {\"name\": \"John\", \"age\": 30, \"joined\": datetime.now()}\njson_string = json.dumps(data, cls=ComplexEncoder)\nprint(json_string)\n\ndef decode_datetime(dct):\n    for key, value in dct.items():\n        try:\n            dct[key] = datetime.fromisoformat(value)\n        except (ValueError, TypeError):\n            pass\n    return dct\n\ndata = json.loads(json_string, object_hook=decode_datetime)\nprint(data)\n</code></pre>"},{"location":"orfeo_toolbox/","title":"Orfeo Toolbox (OTB)","text":""},{"location":"orfeo_toolbox/#installing-and-loading-the-orfeo-toolbox","title":"Installing and Loading the Orfeo Toolbox","text":""},{"location":"orfeo_toolbox/#installing-orfeo-toolbox","title":"Installing Orfeo Toolbox","text":"<p>Before using Orfeo Toolbox in R, you need to install the Orfeo Toolbox library on your system. The installation process may vary depending on your operating system.</p>"},{"location":"orfeo_toolbox/#installing-and-loading-the-rstoolbox-package-in-r","title":"Installing and Loading the <code>RStoolbox</code> Package in R","text":"<p>The <code>RStoolbox</code> package provides an interface to some of the Orfeo Toolbox functionalities.</p> <pre><code># Install the RStoolbox package\ninstall.packages(\"RStoolbox\")\n\n# Load the RStoolbox package\nlibrary(RStoolbox)\n</code></pre>"},{"location":"orfeo_toolbox/#reading-and-writing-data","title":"Reading and Writing Data","text":""},{"location":"orfeo_toolbox/#reading-raster-data","title":"Reading Raster Data","text":"<pre><code># Read a raster file\nraster &lt;- raster(\"path/to/raster/file.tif\")\nprint(raster)\n</code></pre>"},{"location":"orfeo_toolbox/#writing-raster-data","title":"Writing Raster Data","text":"<pre><code># Write a raster to a file\nwriteRaster(raster, \"output_raster.tif\", overwrite=TRUE)\n</code></pre>"},{"location":"orfeo_toolbox/#image-preprocessing","title":"Image Preprocessing","text":""},{"location":"orfeo_toolbox/#image-normalization","title":"Image Normalization","text":"<pre><code># Normalize raster data\nnormalized &lt;- normImage(raster)\n</code></pre>"},{"location":"orfeo_toolbox/#principal-component-analysis-pca","title":"Principal Component Analysis (PCA)","text":"<pre><code># Perform PCA on raster data\npca_result &lt;- rasterPCA(raster)\n</code></pre>"},{"location":"orfeo_toolbox/#image-enhancement","title":"Image Enhancement","text":"<pre><code># Enhance contrast of raster data\nenhanced &lt;- stretch(raster, minq=0.02, maxq=0.98)\n</code></pre>"},{"location":"orfeo_toolbox/#image-classification","title":"Image Classification","text":""},{"location":"orfeo_toolbox/#unsupervised-classification-k-means","title":"Unsupervised Classification (K-means)","text":"<pre><code># Perform K-means classification\nkmeans_result &lt;- unsuperClass(raster, nSamples=1000, nClasses=5)\n</code></pre>"},{"location":"orfeo_toolbox/#supervised-classification-random-forest","title":"Supervised Classification (Random Forest)","text":"<pre><code># Perform supervised classification using Random Forest\ntrainingData &lt;- read.csv(\"path/to/training/data.csv\")\nrf_model &lt;- superClass(raster, trainData=trainingData, responseCol=\"class\", model=\"rf\")\n</code></pre>"},{"location":"orfeo_toolbox/#accuracy-assessment","title":"Accuracy Assessment","text":""},{"location":"orfeo_toolbox/#confusion-matrix","title":"Confusion Matrix","text":"<pre><code># Create a confusion matrix for classification results\nreferenceData &lt;- read.csv(\"path/to/reference/data.csv\")\nconf_matrix &lt;- validateMap(rf_model$map, valData=referenceData, responseCol=\"class\")\n</code></pre>"},{"location":"orfeo_toolbox/#overall-accuracy","title":"Overall Accuracy","text":"<pre><code># Calculate overall accuracy\noverall_acc &lt;- conf_matrix$overallAccuracy\nprint(overall_acc)\n</code></pre>"},{"location":"orfeo_toolbox/#change-detection","title":"Change Detection","text":""},{"location":"orfeo_toolbox/#change-detection-using-difference","title":"Change Detection Using Difference","text":"<pre><code># Perform change detection using difference\nraster1 &lt;- raster(\"path/to/raster1.tif\")\nraster2 &lt;- raster(\"path/to/raster2.tif\")\nchange &lt;- raster2 - raster1\n</code></pre>"},{"location":"orfeo_toolbox/#change-vector-analysis","title":"Change Vector Analysis","text":"<pre><code># Perform change vector analysis\ncva_result &lt;- cva(raster1, raster2)\n</code></pre>"},{"location":"orfeo_toolbox/#visualization","title":"Visualization","text":""},{"location":"orfeo_toolbox/#plotting-rasters","title":"Plotting Rasters","text":"<pre><code># Plot a single raster layer\nplot(raster)\n\n# Plot a raster stack\nplot(stack)\n</code></pre>"},{"location":"orfeo_toolbox/#plotting-classification-results","title":"Plotting Classification Results","text":"<pre><code># Plot classification map\nplot(rf_model$map)\n\n# Plot classification probability map\nplot(rf_model$map$probability)\n</code></pre>"},{"location":"orfeo_toolbox/#plotting-pca-results","title":"Plotting PCA Results","text":"<pre><code># Plot PCA results\nplot(pca_result$map)\n</code></pre>"},{"location":"orfeo_toolbox/#advanced-analysis","title":"Advanced Analysis","text":""},{"location":"orfeo_toolbox/#texture-analysis","title":"Texture Analysis","text":"<pre><code># Perform texture analysis\ntexture &lt;- glcm(raster, window=c(3,3), statistics=\"mean\")\n</code></pre>"},{"location":"orfeo_toolbox/#spectral-indices","title":"Spectral Indices","text":"<pre><code># Calculate NDVI\nndvi &lt;- spectralIndices(raster, red=\"band3\", nir=\"band4\", index=\"NDVI\")\n</code></pre>"},{"location":"orfeo_toolbox/#anomaly-detection","title":"Anomaly Detection","text":"<pre><code># Perform anomaly detection\nanomalies &lt;- anomalyDetection(raster, method=\"mad\")\n</code></pre>"},{"location":"pandoc/","title":"Pandoc","text":""},{"location":"pandoc/#basic-usage","title":"Basic Usage","text":""},{"location":"pandoc/#converting-a-file","title":"Converting a File","text":"<pre><code># Convert a file from markdown to HTML\npandoc input.md -o output.html\n</code></pre>"},{"location":"pandoc/#specifying-input-and-output-formats","title":"Specifying Input and Output Formats","text":"<pre><code># Convert a file from markdown to PDF\npandoc -f markdown -t pdf input.md -o output.pdf\n</code></pre>"},{"location":"pandoc/#adding-metadata","title":"Adding Metadata","text":"<pre><code># Add title and author metadata\npandoc input.md -o output.html -M title=\"Document Title\" -M author=\"Author Name\"\n</code></pre>"},{"location":"pandoc/#common-conversions","title":"Common Conversions","text":""},{"location":"pandoc/#markdown-to-pdf","title":"Markdown to PDF","text":"<pre><code>pandoc input.md -o output.pdf\n</code></pre>"},{"location":"pandoc/#markdown-to-word","title":"Markdown to Word","text":"<pre><code>pandoc input.md -o output.docx\n</code></pre>"},{"location":"pandoc/#html-to-markdown","title":"HTML to Markdown","text":"<pre><code>pandoc input.html -o output.md\n</code></pre>"},{"location":"pandoc/#latex-to-word","title":"LaTeX to Word","text":"<pre><code>pandoc input.tex -o output.docx\n</code></pre>"},{"location":"pandoc/#advanced-options","title":"Advanced Options","text":""},{"location":"pandoc/#table-of-contents","title":"Table of Contents","text":"<pre><code># Generate a table of contents\npandoc input.md -o output.html --toc\n</code></pre>"},{"location":"pandoc/#numbered-sections","title":"Numbered Sections","text":"<pre><code># Generate numbered sections\npandoc input.md -o output.html --number-sections\n</code></pre>"},{"location":"pandoc/#citations-and-bibliography","title":"Citations and Bibliography","text":"<pre><code># Add citations and bibliography\npandoc input.md -o output.pdf --bibliography=biblio.bib\n</code></pre>"},{"location":"pandoc/#templates","title":"Templates","text":"<pre><code># Use a custom template\npandoc input.md -o output.pdf --template=template.tex\n</code></pre>"},{"location":"pandoc/#filters","title":"Filters","text":"<pre><code># Apply a custom filter\npandoc input.md -o output.html --filter=myfilter.py\n</code></pre>"},{"location":"pandoc/#styling-and-formatting","title":"Styling and Formatting","text":""},{"location":"pandoc/#custom-css","title":"Custom CSS","text":"<pre><code># Use custom CSS for HTML output\npandoc input.md -o output.html --css=style.css\n</code></pre>"},{"location":"pandoc/#highlighting-code","title":"Highlighting Code","text":"<pre><code># Highlight code syntax\npandoc input.md -o output.html --highlight-style=pygments\n</code></pre>"},{"location":"pandoc/#combining-multiple-files","title":"Combining Multiple Files","text":""},{"location":"pandoc/#merging-files","title":"Merging Files","text":"<pre><code># Merge multiple files into one\npandoc part1.md part2.md -o output.pdf\n</code></pre>"},{"location":"pandoc/#including-files","title":"Including Files","text":"<pre><code>&lt;!-- Include another file in markdown --&gt;\n\\input{file.md}\n</code></pre>"},{"location":"pandoc/#math-and-equations","title":"Math and Equations","text":""},{"location":"pandoc/#latex-math","title":"LaTeX Math","text":"<pre><code># Convert markdown with LaTeX math to PDF\npandoc input.md -o output.pdf --mathjax\n</code></pre>"},{"location":"pandoc/#example-commands","title":"Example Commands","text":""},{"location":"pandoc/#markdown-to-html-with-table-of-contents","title":"Markdown to HTML with Table of Contents","text":"<pre><code>pandoc input.md -o output.html --toc\n</code></pre>"},{"location":"pandoc/#markdown-to-pdf-with-numbered-sections","title":"Markdown to PDF with Numbered Sections","text":"<pre><code>pandoc input.md -o output.pdf --number-sections\n</code></pre>"},{"location":"pandoc/#markdown-to-word-with-citations","title":"Markdown to Word with Citations","text":"<pre><code>pandoc input.md -o output.docx --bibliography=biblio.bib\n</code></pre>"},{"location":"pandoc/#html-to-markdown-with-custom-filter","title":"HTML to Markdown with Custom Filter","text":"<pre><code>pandoc input.html -o output.md --filter=myfilter.py\n</code></pre>"},{"location":"pandoc/#latex-to-pdf-with-custom-template","title":"LaTeX to PDF with Custom Template","text":"<pre><code>pandoc input.tex -o output.pdf --template=template.tex\n</code></pre>"},{"location":"pygame/","title":"Pygame","text":""},{"location":"pygame/#getting-started","title":"Getting Started","text":""},{"location":"pygame/#installing-pygame","title":"Installing Pygame","text":"<pre><code>pip install pygame\n</code></pre>"},{"location":"pygame/#importing-pygame","title":"Importing Pygame","text":"<pre><code>import pygame\nfrom pygame.locals import *\n</code></pre>"},{"location":"pygame/#initializing-and-quitting","title":"Initializing and Quitting","text":"<pre><code># Initialize Pygame\npygame.init()\n\n# Quit Pygame\npygame.quit()\n</code></pre>"},{"location":"pygame/#creating-a-game-window","title":"Creating a Game Window","text":""},{"location":"pygame/#setting-up-the-display","title":"Setting Up the Display","text":"<pre><code># Set up the game window\nscreen = pygame.display.set_mode((width, height))\npygame.display.set_caption(\"Game Title\")\n</code></pre>"},{"location":"pygame/#main-game-loop","title":"Main Game Loop","text":"<pre><code>running = True\nwhile running:\n    for event in pygame.event.get():\n        if event.type == QUIT:\n            running = False\n\n    # Update game state\n\n    # Draw everything\n    pygame.display.update()\n\npygame.quit()\n</code></pre>"},{"location":"pygame/#drawing-shapes","title":"Drawing Shapes","text":""},{"location":"pygame/#drawing-a-rectangle","title":"Drawing a Rectangle","text":"<pre><code>rect = pygame.Rect(x, y, width, height)\npygame.draw.rect(screen, (255, 0, 0), rect)\n</code></pre>"},{"location":"pygame/#drawing-a-circle","title":"Drawing a Circle","text":"<pre><code>pygame.draw.circle(screen, (0, 255, 0), (x, y), radius)\n</code></pre>"},{"location":"pygame/#drawing-a-line","title":"Drawing a Line","text":"<pre><code>pygame.draw.line(screen, (0, 0, 255), (start_x, start_y), (end_x, end_y), width)\n</code></pre>"},{"location":"pygame/#handling-events","title":"Handling Events","text":""},{"location":"pygame/#event-types","title":"Event Types","text":"<pre><code>for event in pygame.event.get():\n    if event.type == QUIT:\n        running = False\n    elif event.type == KEYDOWN:\n        if event.key == K_ESCAPE:\n            running = False\n    elif event.type == MOUSEBUTTONDOWN:\n        if event.button == 1:\n            print(\"Left mouse button clicked at\", event.pos)\n</code></pre>"},{"location":"pygame/#working-with-surfaces","title":"Working with Surfaces","text":""},{"location":"pygame/#creating-a-surface","title":"Creating a Surface","text":"<pre><code>surface = pygame.Surface((width, height))\n</code></pre>"},{"location":"pygame/#blitting-a-surface","title":"Blitting a Surface","text":"<pre><code>screen.blit(surface, (x, y))\n</code></pre>"},{"location":"pygame/#loading-and-displaying-images","title":"Loading and Displaying Images","text":""},{"location":"pygame/#loading-an-image","title":"Loading an Image","text":"<pre><code>image = pygame.image.load(\"path/to/image.png\")\n</code></pre>"},{"location":"pygame/#displaying-an-image","title":"Displaying an Image","text":"<pre><code>screen.blit(image, (x, y))\n</code></pre>"},{"location":"pygame/#playing-sounds","title":"Playing Sounds","text":""},{"location":"pygame/#loading-a-sound","title":"Loading a Sound","text":"<pre><code>sound = pygame.mixer.Sound(\"path/to/sound.wav\")\n</code></pre>"},{"location":"pygame/#playing-a-sound","title":"Playing a Sound","text":"<pre><code>sound.play()\n</code></pre>"},{"location":"pygame/#loading-and-playing-background-music","title":"Loading and Playing Background Music","text":"<pre><code>pygame.mixer.music.load(\"path/to/music.mp3\")\npygame.mixer.music.play(-1)  # -1 means loop indefinitely\n</code></pre>"},{"location":"pygame/#handling-keyboard-input","title":"Handling Keyboard Input","text":""},{"location":"pygame/#checking-key-states","title":"Checking Key States","text":"<pre><code>keys = pygame.key.get_pressed()\nif keys[K_LEFT]:\n    print(\"Left arrow key is pressed\")\nif keys[K_RIGHT]:\n    print(\"Right arrow key is pressed\")\n</code></pre>"},{"location":"pygame/#handling-mouse-input","title":"Handling Mouse Input","text":""},{"location":"pygame/#getting-mouse-position","title":"Getting Mouse Position","text":"<pre><code>mouse_pos = pygame.mouse.get_pos()\nprint(mouse_pos)\n</code></pre>"},{"location":"pygame/#checking-mouse-buttons","title":"Checking Mouse Buttons","text":"<pre><code>mouse_buttons = pygame.mouse.get_pressed()\nif mouse_buttons[0]:  # Left mouse button\n    print(\"Left mouse button is pressed\")\n</code></pre>"},{"location":"pygame/#fonts-and-text","title":"Fonts and Text","text":""},{"location":"pygame/#creating-a-font","title":"Creating a Font","text":"<pre><code>font = pygame.font.Font(None, 36)  # None for default font, 36 for font size\n</code></pre>"},{"location":"pygame/#rendering-text","title":"Rendering Text","text":"<pre><code>text = font.render(\"Hello, Pygame!\", True, (255, 255, 255))  # True for antialiasing\nscreen.blit(text, (x, y))\n</code></pre>"},{"location":"pygame/#setting-up-the-clock","title":"Setting Up the Clock","text":""},{"location":"pygame/#creating-a-clock","title":"Creating a Clock","text":"<pre><code>clock = pygame.time.Clock()\n</code></pre>"},{"location":"pygame/#limiting-the-frame-rate","title":"Limiting the Frame Rate","text":"<pre><code>clock.tick(60)  # Limit to 60 frames per second\n</code></pre>"},{"location":"raygui/","title":"Raygui","text":""},{"location":"raygui/#getting-started","title":"Getting Started","text":""},{"location":"raygui/#including-raygui-in-your-project","title":"Including raygui in Your Project","text":"<p>To use raygui, you need to include the <code>raygui.h</code> header file in your project.</p> <pre><code>#include \"raylib.h\"\n#define RAYGUI_IMPLEMENTATION\n#include \"raygui.h\"\n</code></pre>"},{"location":"raygui/#initializing-and-closing","title":"Initializing and Closing","text":""},{"location":"raygui/#initializing-raylib-and-raygui","title":"Initializing raylib and raygui","text":"<pre><code>// Initialize the window\nInitWindow(screenWidth, screenHeight, \"Window Title\");\n\n// Set the target FPS\nSetTargetFPS(60);\n</code></pre>"},{"location":"raygui/#closing-raylib-and-raygui","title":"Closing raylib and raygui","text":"<pre><code>// Close the window and clean up resources\nCloseWindow();\n</code></pre>"},{"location":"raygui/#creating-a-gui","title":"Creating a GUI","text":""},{"location":"raygui/#buttons","title":"Buttons","text":"<pre><code>if (GuiButton((Rectangle){ x, y, width, height }, \"Button Text\")) {\n    // Button was clicked\n}\n</code></pre>"},{"location":"raygui/#labels","title":"Labels","text":"<pre><code>GuiLabel((Rectangle){ x, y, width, height }, \"Label Text\");\n</code></pre>"},{"location":"raygui/#checkboxes","title":"Checkboxes","text":"<pre><code>bool checked = false;\nchecked = GuiCheckBox((Rectangle){ x, y, width, height }, \"Checkbox Text\", checked);\n</code></pre>"},{"location":"raygui/#textboxes","title":"Textboxes","text":"<pre><code>char text[64] = \"Default Text\";\nGuiTextBox((Rectangle){ x, y, width, height }, text, sizeof(text), true);\n</code></pre>"},{"location":"raygui/#sliders","title":"Sliders","text":"<pre><code>float value = 50.0f;\nvalue = GuiSlider((Rectangle){ x, y, width, height }, \"Min\", \"Max\", value, 0, 100);\n</code></pre>"},{"location":"raygui/#dropdown-boxes","title":"Dropdown Boxes","text":"<pre><code>int active = 0;\nactive = GuiDropdownBox((Rectangle){ x, y, width, height }, \"Option1;Option2;Option3\", &amp;active, true);\n</code></pre>"},{"location":"raygui/#spinners","title":"Spinners","text":"<pre><code>int value = 0;\nvalue = GuiSpinner((Rectangle){ x, y, width, height }, &amp;value, 0, 100, true);\n</code></pre>"},{"location":"raygui/#scrollbars","title":"Scrollbars","text":"<pre><code>int value = 0;\nvalue = GuiScrollBar((Rectangle){ x, y, width, height }, value, 0, 100);\n</code></pre>"},{"location":"raygui/#styling-the-gui","title":"Styling the GUI","text":""},{"location":"raygui/#setting-a-style","title":"Setting a Style","text":"<pre><code>GuiSetStyle(DEFAULT, TEXT_SIZE, 20);\nGuiSetStyle(BUTTON, BORDER_WIDTH, 2);\n</code></pre>"},{"location":"raygui/#loading-a-custom-style","title":"Loading a Custom Style","text":"<pre><code>GuiLoadStyle(\"path/to/style.rgs\");\n</code></pre>"},{"location":"raygui/#resetting-to-default-style","title":"Resetting to Default Style","text":"<pre><code>GuiLoadStyleDefault();\n</code></pre>"},{"location":"raygui/#example","title":"Example","text":""},{"location":"raygui/#complete-example-program","title":"Complete Example Program","text":"<pre><code>#include \"raylib.h\"\n#define RAYGUI_IMPLEMENTATION\n#include \"raygui.h\"\n\nint main(void)\n{\n    // Initialization\n    const int screenWidth = 800;\n    const int screenHeight = 450;\n\n    InitWindow(screenWidth, screenHeight, \"raygui example - basic window\");\n\n    SetTargetFPS(60);\n\n    bool checked = false;\n    float sliderValue = 50.0f;\n    char textBox[64] = \"Edit me\";\n\n    // Main game loop\n    while (!WindowShouldClose())\n    {\n        // Update\n\n        // Draw\n        BeginDrawing();\n\n        ClearBackground(RAYWHITE);\n\n        if (GuiButton((Rectangle){ 10, 10, 100, 30 }, \"Button\"))\n        {\n            // Button was clicked\n        }\n\n        GuiLabel((Rectangle){ 10, 50, 100, 30 }, \"Label\");\n\n        checked = GuiCheckBox((Rectangle){ 10, 90, 20, 20 }, \"Checkbox\", checked);\n\n        GuiTextBox((Rectangle){ 10, 130, 200, 30 }, textBox, sizeof(textBox), true);\n\n        sliderValue = GuiSlider((Rectangle){ 10, 170, 200, 20 }, \"Min\", \"Max\", sliderValue, 0, 100);\n\n        EndDrawing();\n    }\n\n    // De-Initialization\n    CloseWindow();\n\n    return 0;\n}\n</code></pre>"},{"location":"raylib/","title":"Raylib","text":""},{"location":"raylib/#getting-started","title":"Getting Started","text":""},{"location":"raylib/#installing-raylib","title":"Installing raylib","text":"<p>Download and install raylib from the official website.</p>"},{"location":"raylib/#including-raylib-in-your-project","title":"Including raylib in Your Project","text":"<pre><code>#include \"raylib.h\"\n</code></pre>"},{"location":"raylib/#initializing-and-closing","title":"Initializing and Closing","text":"<pre><code>// Initialize the window\nInitWindow(screenWidth, screenHeight, \"Window Title\");\n\n// Set the target FPS\nSetTargetFPS(60);\n\n// Close the window and clean up resources\nCloseWindow();\n</code></pre>"},{"location":"raylib/#basic-structure","title":"Basic Structure","text":""},{"location":"raylib/#main-game-loop","title":"Main Game Loop","text":"<pre><code>while (!WindowShouldClose())    // Detect window close button or ESC key\n{\n    // Update game state\n\n    // Draw everything\n    BeginDrawing();\n\n    ClearBackground(RAYWHITE);\n\n    // Drawing code goes here\n\n    EndDrawing();\n}\n</code></pre>"},{"location":"raylib/#drawing-shapes","title":"Drawing Shapes","text":""},{"location":"raylib/#drawing-a-rectangle","title":"Drawing a Rectangle","text":"<pre><code>DrawRectangle(x, y, width, height, color);\n</code></pre>"},{"location":"raylib/#drawing-a-circle","title":"Drawing a Circle","text":"<pre><code>DrawCircle(x, y, radius, color);\n</code></pre>"},{"location":"raylib/#drawing-a-line","title":"Drawing a Line","text":"<pre><code>DrawLine(startX, startY, endX, endY, color);\n</code></pre>"},{"location":"raylib/#handling-input","title":"Handling Input","text":""},{"location":"raylib/#keyboard-input","title":"Keyboard Input","text":"<pre><code>if (IsKeyDown(KEY_RIGHT)) \n{\n    // Right arrow key is being held down\n}\n\nif (IsKeyPressed(KEY_SPACE)) \n{\n    // Space key was just pressed\n}\n</code></pre>"},{"location":"raylib/#mouse-input","title":"Mouse Input","text":"<pre><code>Vector2 mousePosition = GetMousePosition();\n\nif (IsMouseButtonDown(MOUSE_LEFT_BUTTON)) \n{\n    // Left mouse button is being held down\n}\n</code></pre>"},{"location":"raylib/#working-with-textures","title":"Working with Textures","text":""},{"location":"raylib/#loading-a-texture","title":"Loading a Texture","text":"<pre><code>Texture2D texture = LoadTexture(\"path/to/texture.png\");\n</code></pre>"},{"location":"raylib/#unloading-a-texture","title":"Unloading a Texture","text":"<pre><code>UnloadTexture(texture);\n</code></pre>"},{"location":"raylib/#drawing-a-texture","title":"Drawing a Texture","text":"<pre><code>DrawTexture(texture, x, y, WHITE);\n</code></pre>"},{"location":"raylib/#fonts-and-text","title":"Fonts and Text","text":""},{"location":"raylib/#loading-a-font","title":"Loading a Font","text":"<pre><code>Font font = LoadFont(\"path/to/font.ttf\");\n</code></pre>"},{"location":"raylib/#unloading-a-font","title":"Unloading a Font","text":"<pre><code>UnloadFont(font);\n</code></pre>"},{"location":"raylib/#drawing-text","title":"Drawing Text","text":"<pre><code>DrawText(\"Hello, raylib!\", x, y, fontSize, color);\n</code></pre>"},{"location":"raylib/#audio","title":"Audio","text":""},{"location":"raylib/#initializing-and-closing-audio-device","title":"Initializing and Closing Audio Device","text":"<pre><code>InitAudioDevice();\nCloseAudioDevice();\n</code></pre>"},{"location":"raylib/#loading-a-sound","title":"Loading a Sound","text":"<pre><code>Sound sound = LoadSound(\"path/to/sound.wav\");\n</code></pre>"},{"location":"raylib/#unloading-a-sound","title":"Unloading a Sound","text":"<pre><code>UnloadSound(sound);\n</code></pre>"},{"location":"raylib/#playing-a-sound","title":"Playing a Sound","text":"<pre><code>PlaySound(sound);\n</code></pre>"},{"location":"raylib/#loading-and-playing-music","title":"Loading and Playing Music","text":"<pre><code>Music music = LoadMusicStream(\"path/to/music.mp3\");\nPlayMusicStream(music);\n</code></pre>"},{"location":"raylib/#collision-detection","title":"Collision Detection","text":""},{"location":"raylib/#checking-for-rectangle-collision","title":"Checking for Rectangle Collision","text":"<pre><code>bool collision = CheckCollisionRecs(rect1, rect2);\n</code></pre>"},{"location":"raylib/#checking-for-circle-collision","title":"Checking for Circle Collision","text":"<pre><code>bool collision = CheckCollisionCircles(center1, radius1, center2, radius2);\n</code></pre>"},{"location":"raylib/#advanced-drawing","title":"Advanced Drawing","text":""},{"location":"raylib/#drawing-textured-shapes","title":"Drawing Textured Shapes","text":"<pre><code>DrawTexturePro(texture, sourceRec, destRec, origin, rotation, WHITE);\n</code></pre>"},{"location":"raylib/#drawing-text-with-a-font","title":"Drawing Text with a Font","text":"<pre><code>DrawTextEx(font, \"Hello, raylib!\", position, fontSize, spacing, color);\n</code></pre>"},{"location":"raylib/#utility-functions","title":"Utility Functions","text":""},{"location":"raylib/#getting-frame-time","title":"Getting Frame Time","text":"<pre><code>float deltaTime = GetFrameTime();\n</code></pre>"},{"location":"raylib/#getting-random-values","title":"Getting Random Values","text":"<pre><code>int randomValue = GetRandomValue(min, max);\n</code></pre>"},{"location":"raylib/#example","title":"Example","text":""},{"location":"raylib/#complete-example-program","title":"Complete Example Program","text":"<pre><code>#include \"raylib.h\"\n\nint main(void)\n{\n    // Initialization\n    const int screenWidth = 800;\n    const int screenHeight = 450;\n\n    InitWindow(screenWidth, screenHeight, \"raylib [core] example - basic window\");\n\n    SetTargetFPS(60);\n\n    // Main game loop\n    while (!WindowShouldClose())\n    {\n        // Update\n\n        // Draw\n        BeginDrawing();\n\n        ClearBackground(RAYWHITE);\n\n        DrawText(\"Congrats! You created your first window!\", 190, 200, 20, LIGHTGRAY);\n\n        EndDrawing();\n    }\n\n    // De-Initialization\n    CloseWindow();\n\n    return 0;\n}\n</code></pre>"},{"location":"rstoolbox/","title":"RStoolbox","text":""},{"location":"rstoolbox/#installing-and-loading-the-rstoolbox-package","title":"Installing and Loading the RSToolbox Package","text":"<pre><code># Install the RSToolbox package\ninstall.packages(\"RSToolbox\")\n\n# Load the RSToolbox package\nlibrary(RSToolbox)\n</code></pre>"},{"location":"rstoolbox/#reading-and-writing-data","title":"Reading and Writing Data","text":""},{"location":"rstoolbox/#reading-raster-data","title":"Reading Raster Data","text":"<pre><code># Read a raster file\nraster &lt;- raster(\"path/to/raster/file.tif\")\n\n# Read multiple raster files as a stack\nstack &lt;- stack(list.files(pattern=\"*.tif\"))\n</code></pre>"},{"location":"rstoolbox/#writing-raster-data","title":"Writing Raster Data","text":"<pre><code># Write a raster to a file\nwriteRaster(raster, \"output_raster.tif\", overwrite=TRUE)\n</code></pre>"},{"location":"rstoolbox/#preprocessing","title":"Preprocessing","text":""},{"location":"rstoolbox/#normalizing-data","title":"Normalizing Data","text":"<pre><code># Normalize raster data\nnormalized &lt;- normalize(raster)\n</code></pre>"},{"location":"rstoolbox/#principal-component-analysis-pca","title":"Principal Component Analysis (PCA)","text":"<pre><code># Perform PCA on raster data\npca_result &lt;- rasterPCA(raster)\n</code></pre>"},{"location":"rstoolbox/#image-enhancement","title":"Image Enhancement","text":"<pre><code># Enhance contrast of raster data\nenhanced &lt;- stretch(raster, minq=0.02, maxq=0.98)\n</code></pre>"},{"location":"rstoolbox/#classification","title":"Classification","text":""},{"location":"rstoolbox/#unsupervised-classification-k-means","title":"Unsupervised Classification (K-means)","text":"<pre><code># Perform K-means classification\nkmeans_result &lt;- unsuperClass(raster, nSamples=1000, nClasses=5)\n</code></pre>"},{"location":"rstoolbox/#supervised-classification-random-forest","title":"Supervised Classification (Random Forest)","text":"<pre><code># Perform supervised classification using Random Forest\ntrainingData &lt;- read.csv(\"path/to/training/data.csv\")\nrf_model &lt;- superClass(raster, trainData=trainingData, responseCol=\"class\", model=\"rf\")\n</code></pre>"},{"location":"rstoolbox/#accuracy-assessment","title":"Accuracy Assessment","text":""},{"location":"rstoolbox/#confusion-matrix","title":"Confusion Matrix","text":"<pre><code># Create a confusion matrix for classification results\nreferenceData &lt;- read.csv(\"path/to/reference/data.csv\")\nconf_matrix &lt;- validateMap(rf_model$map, valData=referenceData, responseCol=\"class\")\n</code></pre>"},{"location":"rstoolbox/#overall-accuracy","title":"Overall Accuracy","text":"<pre><code># Calculate overall accuracy\noverall_acc &lt;- conf_matrix$overallAccuracy\nprint(overall_acc)\n</code></pre>"},{"location":"rstoolbox/#change-detection","title":"Change Detection","text":""},{"location":"rstoolbox/#change-detection-using-difference","title":"Change Detection Using Difference","text":"<pre><code># Perform change detection using difference\nraster1 &lt;- raster(\"path/to/raster1.tif\")\nraster2 &lt;- raster(\"path/to/raster2.tif\")\nchange &lt;- raster2 - raster1\n</code></pre>"},{"location":"rstoolbox/#change-vector-analysis","title":"Change Vector Analysis","text":"<pre><code># Perform change vector analysis\ncva_result &lt;- cva(raster1, raster2)\n</code></pre>"},{"location":"rstoolbox/#visualization","title":"Visualization","text":""},{"location":"rstoolbox/#plotting-rasters","title":"Plotting Rasters","text":"<pre><code># Plot a single raster layer\nplot(raster)\n\n# Plot a raster stack\nplot(stack)\n</code></pre>"},{"location":"rstoolbox/#plotting-classification-results","title":"Plotting Classification Results","text":"<pre><code># Plot classification map\nplot(rf_model$map)\n\n# Plot classification probability map\nplot(rf_model$map$probability)\n</code></pre>"},{"location":"rstoolbox/#plotting-pca-results","title":"Plotting PCA Results","text":"<pre><code># Plot PCA results\nplot(pca_result$map)\n</code></pre>"},{"location":"rstoolbox/#advanced-analysis","title":"Advanced Analysis","text":""},{"location":"rstoolbox/#texture-analysis","title":"Texture Analysis","text":"<pre><code># Perform texture analysis\ntexture &lt;- glcm(raster, window=c(3,3), statistics=\"mean\")\n</code></pre>"},{"location":"rstoolbox/#spectral-indices","title":"Spectral Indices","text":"<pre><code># Calculate NDVI\nndvi &lt;- spectralIndices(raster, red=\"band3\", nir=\"band4\", index=\"NDVI\")\n</code></pre>"},{"location":"rstoolbox/#anomaly-detection","title":"Anomaly Detection","text":"<pre><code># Perform anomaly detection\nanomalies &lt;- anomalyDetection(raster, method=\"mad\")\n</code></pre>"},{"location":"terra/","title":"Terra","text":""},{"location":"terra/#installing-and-loading-the-terra-package","title":"Installing and Loading the terra Package","text":"<pre><code># Install the terra package\ninstall.packages(\"terra\")\n\n# Load the terra package\nlibrary(terra)\n</code></pre>"},{"location":"terra/#working-with-rasters","title":"Working with Rasters","text":""},{"location":"terra/#reading-raster-data","title":"Reading Raster Data","text":"<pre><code># Read a raster file\nr &lt;- rast(\"path/to/raster/file.tif\")\n\n# Print raster information\nprint(r)\n</code></pre>"},{"location":"terra/#creating-raster-data","title":"Creating Raster Data","text":"<pre><code># Create an empty raster with specific dimensions\nr &lt;- rast(nrows=100, ncols=100, xmin=0, xmax=10, ymin=0, ymax=10)\n\n# Assign values to the raster\nvalues(r) &lt;- runif(ncell(r))\n</code></pre>"},{"location":"terra/#writing-raster-data","title":"Writing Raster Data","text":"<pre><code># Write a raster to a file\nwriteRaster(r, \"output_raster.tif\", overwrite=TRUE)\n</code></pre>"},{"location":"terra/#raster-calculations","title":"Raster Calculations","text":""},{"location":"terra/#basic-calculations","title":"Basic Calculations","text":"<pre><code># Arithmetic operations\nr1 &lt;- rast(\"raster1.tif\")\nr2 &lt;- rast(\"raster2.tif\")\n\nr_sum &lt;- r1 + r2\nr_diff &lt;- r1 - r2\nr_prod &lt;- r1 * r2\nr_div &lt;- r1 / r2\n</code></pre>"},{"location":"terra/#cell-statistics","title":"Cell Statistics","text":"<pre><code># Summary statistics\nmean_value &lt;- global(r, \"mean\")\nmax_value &lt;- global(r, \"max\")\nmin_value &lt;- global(r, \"min\")\n\n# Cell-based statistics\ncell_mean &lt;- app(r, mean)\ncell_sum &lt;- app(r, sum)\n</code></pre>"},{"location":"terra/#zonal-statistics","title":"Zonal Statistics","text":"<pre><code># Zonal statistics\nzones &lt;- rast(\"zones.tif\")\nzonal_mean &lt;- zonal(r, zones, fun=\"mean\")\n</code></pre>"},{"location":"terra/#vector-data","title":"Vector Data","text":""},{"location":"terra/#reading-vector-data","title":"Reading Vector Data","text":"<pre><code># Read a vector file\nv &lt;- vect(\"path/to/vector/file.shp\")\n\n# Print vector information\nprint(v)\n</code></pre>"},{"location":"terra/#creating-vector-data","title":"Creating Vector Data","text":"<pre><code># Create a point vector\npoints &lt;- vect(matrix(c(1, 2, 3, 4, 5, 6), ncol=2), type=\"points\")\n\n# Create a line vector\nlines &lt;- vect(matrix(c(1, 2, 3, 4, 5, 6), ncol=2), type=\"lines\")\n\n# Create a polygon vector\npolygons &lt;- vect(matrix(c(1, 2, 3, 4, 5, 6), ncol=2), type=\"polygons\")\n</code></pre>"},{"location":"terra/#writing-vector-data","title":"Writing Vector Data","text":"<pre><code># Write a vector to a file\nwriteVector(v, \"output_vector.shp\", overwrite=TRUE)\n</code></pre>"},{"location":"terra/#raster-vector-interactions","title":"Raster-Vector Interactions","text":""},{"location":"terra/#extracting-raster-values","title":"Extracting Raster Values","text":"<pre><code># Extract raster values at vector locations\nvalues &lt;- extract(r, v)\n</code></pre>"},{"location":"terra/#rasterizing-vectors","title":"Rasterizing Vectors","text":"<pre><code># Rasterize a vector\nr &lt;- rasterize(v, r, field=\"attribute_name\")\n</code></pre>"},{"location":"terra/#vectorizing-rasters","title":"Vectorizing Rasters","text":"<pre><code># Convert raster to vector\nv &lt;- as.polygons(r)\n</code></pre>"},{"location":"terra/#spatial-operations","title":"Spatial Operations","text":""},{"location":"terra/#reprojecting-data","title":"Reprojecting Data","text":"<pre><code># Reproject a raster\nr_proj &lt;- project(r, \"EPSG:4326\")\n\n# Reproject a vector\nv_proj &lt;- project(v, \"EPSG:4326\")\n</code></pre>"},{"location":"terra/#resampling-rasters","title":"Resampling Rasters","text":"<pre><code># Resample a raster\nr_resample &lt;- resample(r, r, method=\"bilinear\")\n</code></pre>"},{"location":"terra/#aggregating-rasters","title":"Aggregating Rasters","text":"<pre><code># Aggregate a raster\nr_agg &lt;- aggregate(r, fact=2, fun=\"mean\")\n</code></pre>"},{"location":"terra/#masking-rasters","title":"Masking Rasters","text":"<pre><code># Mask a raster with another raster or vector\nr_masked &lt;- mask(r, mask_layer)\n</code></pre>"},{"location":"terra/#cropping-rasters","title":"Cropping Rasters","text":"<pre><code># Crop a raster\nr_cropped &lt;- crop(r, extent(0, 5, 0, 5))\n</code></pre>"},{"location":"terra/#visualization","title":"Visualization","text":""},{"location":"terra/#plotting-rasters","title":"Plotting Rasters","text":"<pre><code># Plot a raster\nplot(r)\n</code></pre>"},{"location":"terra/#plotting-vectors","title":"Plotting Vectors","text":"<pre><code># Plot a vector\nplot(v)\n</code></pre>"},{"location":"terra/#overlaying-rasters-and-vectors","title":"Overlaying Rasters and Vectors","text":"<pre><code># Overlay a vector on a raster plot\nplot(r)\nplot(v, add=TRUE)\n</code></pre>"},{"location":"venv/","title":"Venv","text":""},{"location":"venv/#creating-a-virtual-environment","title":"Creating a Virtual Environment","text":"<pre><code># Create a virtual environment\npython -m venv myenv\n</code></pre>"},{"location":"venv/#activating-a-virtual-environment","title":"Activating a Virtual Environment","text":""},{"location":"venv/#on-unix-or-macos","title":"On Unix or macOS","text":"<pre><code># Activate the virtual environment\nsource myenv/bin/activate\n\n# Deactivate the virtual environment\ndeactivate\n</code></pre>"},{"location":"venv/#virtual-environment-management","title":"Virtual Environment Management","text":""},{"location":"venv/#checking-python-interpreter","title":"Checking Python Interpreter","text":"<pre><code># Check the path of the Python interpreter in the virtual environment\nwhich python\n</code></pre>"},{"location":"venv/#checking-virtual-environment-path","title":"Checking Virtual Environment Path","text":"<pre><code># Check the path of the virtual environment\nimport sys\nprint(sys.prefix)\n</code></pre>"},{"location":"venv/#creating-isolated-environments","title":"Creating Isolated Environments","text":"<pre><code># Create an isolated environment using venv\npython -m venv myenv --without-pip\n\n# Activate the isolated environment and manually install pip\nsource myenv/bin/activate\ncurl https://bootstrap.pypa.io/get-pip.py | python\n</code></pre>"},{"location":"venv/#configuration-and-customization","title":"Configuration and Customization","text":""},{"location":"venv/#customizing-the-prompt","title":"Customizing the Prompt","text":"<pre><code># Customize the prompt of the virtual environment\npython -m venv myenv --prompt 'MyEnv'\n</code></pre>"}]}